{"version":3,"sources":["../src/runtime.ts"],"names":["ATTR_PREFIX","ATTRS","RuntimeState","listId","updates","state","ContraWebflowRuntime","config","ContraClient","listElements","programFilters","listElement","programId","error","initialFilters","limit","button","action","targetListId","e","append","filters","response","newExperts","allExperts","experts","template","card","fragment","expert","expertCard","element","fieldName","format","value","displayValue","utils","rating","fullStars","hasHalfStar","emptyStars","starsHtml","i","textElement","url","mediaType","parent","mediaElement","urlLower","isVideo","ext","isCloudinaryVideo","originalElement","video","posterUrl","fallbackImg","img","placeholder","videoUrl","from","to","attr","existingStyle","container","repeatType","maxItems","tag","items","item","itemElement","showWhen","hideWhen","shouldShow","condition","parts","field","restOfCondition","expertValue","result","numValue","expertStr","valueStr","emptyElement","loadMoreButton","btn","hasMore","filterKey","newFilters","processedValue","v","apiKey","filterControls","control","debounceTime","handler","debouncedHandler","eventType","func","delay","timeoutId","args","name","selector","datalist","selectedOption","opt","option","show","loadingElement","errorElement","target","eventName","detail","event","message","data","labels","locationValue","labelMatch","targetList","filterDef","f","targetElement","optionElement","rawValue","label","autoInit","configElement","runtime"],"mappings":"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","file":"index.js","sourcesContent":["import { ContraClient, utils } from '@contra/client';\nimport type {\n  ExpertProfile,\n  ExpertFilters,\n  FilterChangeEvent,\n  ExpertLoadEvent,\n  ErrorEvent,\n  ExpertField\n} from '@contra/types';\n\n/**\n * Webflow Runtime for Contra Experts\n * Simplified for flexibility and predictability.\n */\n\n// Simplified configuration\ninterface RuntimeConfig {\n  apiKey: string;\n  debug?: boolean;\n  loadingClass?: string;\n  errorClass?: string;\n  emptyClass?: string;\n  // Video configuration\n  videoAutoplay?: boolean;\n  videoHoverPlay?: boolean;\n  videoMuted?: boolean;\n  videoLoop?: boolean;\n  videoControls?: boolean;\n}\n\n// Attribute constants\nconst ATTR_PREFIX = 'data-contra-';\nconst ATTRS = {\n  // Core list attributes\n  listId: 'list-id',\n  program: 'program',\n  template: 'template',\n  \n  // States\n  loading: 'loading',\n  error: 'error',\n  empty: 'empty',\n  \n  // Field binding\n  field: 'field',\n  format: 'format',\n  \n  // Repeating elements\n  repeat: 'repeat',\n  max: 'max',\n  \n  // Sorting and pagination\n  limit: 'limit',\n  \n  // Actions\n  action: 'action',\n  listTarget: 'list-target',\n\n  // Conditional display\n  showWhen: 'show-when',\n  hideWhen: 'hide-when'\n} as const;\n\n// State management is now keyed by the list's unique ID\nclass RuntimeState {\n  private states = new Map<string, {\n    filters: ExpertFilters;\n    experts: ExpertProfile[];\n    loading: boolean;\n    error: Error | null;\n    offset: number;\n    limit: number;\n    totalCount: number;\n    hasNextPage: boolean;\n  }>();\n\n  getState(listId: string) {\n    if (!this.states.has(listId)) {\n      this.states.set(listId, {\n        filters: {},\n        experts: [],\n        loading: false,\n        error: null,\n        offset: 0,\n        limit: 20, // Default limit\n        totalCount: 0,\n        hasNextPage: false\n      });\n    }\n    return this.states.get(listId)!;\n  }\n\n  updateState(listId: string, updates: Partial<ReturnType<RuntimeState['getState']>>) {\n    const state = this.getState(listId);\n    Object.assign(state, updates);\n    this.states.set(listId, state);\n  }\n}\n\n/**\n * Main Runtime Class\n */\nexport class ContraWebflowRuntime {\n  private client: ContraClient;\n  private config: Required<RuntimeConfig>;\n  private state = new RuntimeState();\n  private debouncedReload: Map<string, () => void> = new Map();\n  private filterNameMap: Record<string, string> = {\n    locations: 'location',\n  };\n  private filterOptionLabels: Record<string, Record<string, string>> = {\n    sortBy: {\n      relevance: 'Relevance',\n      oldest: 'Oldest',\n      newest: 'Newest',\n      rate_asc: 'Rate (Low to High)',\n      rate_desc: 'Rate (High to Low)'\n    }\n  };\n\n  constructor(config: RuntimeConfig) {\n    this.config = {\n      debug: false,\n      loadingClass: 'loading',\n      errorClass: 'error',\n      emptyClass: 'empty',\n      // Video configuration defaults\n      videoAutoplay: false,\n      videoHoverPlay: true,\n      videoMuted: true,\n      videoLoop: true,\n      videoControls: false,\n      ...config\n    };\n\n    this.client = new ContraClient({\n      apiKey: this.config.apiKey,\n      debug: this.config.debug\n    });\n\n    this.log('Runtime initialized', this.config);\n  }\n\n  /**\n   * Initialize the runtime by finding and setting up all lists.\n   */\n  async init(): Promise<void> {\n    this.log('Initializing runtime...');\n\n    try {\n      // 1. Discover all lists and unique programs to fetch filters for\n      const listElements = this.querySelectorAll(document.body, `[${ATTR_PREFIX}${ATTRS.listId}]`);\n      this.log(`Found ${listElements.length} lists to initialize.`);\n      \n      const programFilters = new Map<string, any[]>();\n      for (const listElement of listElements) {\n        const programId = this.getAttr(listElement, ATTRS.program);\n        if (programId && !programFilters.has(programId)) {\n          this.log(`Fetching filters for program: ${programId}`);\n          programFilters.set(programId, await this.getAvailableFilters(programId));\n        }\n      }\n\n      // 2. Populate all filter controls on the page once\n      this.populateAllFilterControls(programFilters);\n\n      // 3. Initialize each list\n      for (const listElement of listElements) {\n        await this.initList(listElement);\n      }\n\n      // 4. Wire up all action buttons and filter controls\n      this.wireActionButtons();\n      this.wireFilterControls();\n\n      this.log('Runtime initialization complete');\n    } catch (error) {\n      this.log('Runtime initialization failed', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Initialize a single expert list.\n   */\n  private async initList(listElement: Element): Promise<void> {\n    const listId = this.getAttr(listElement, ATTRS.listId);\n    const programId = this.getAttr(listElement, ATTRS.program);\n\n    if (!listId || !programId) {\n      this.log('List element is missing required attributes `data-contra-list-id` or `data-contra-program`.', listElement);\n      return;\n    }\n\n    this.log(`Initializing list: ${listId} for program: ${programId}`);\n\n    try {\n      // Mark as initialized\n      (listElement as HTMLElement).setAttribute('data-contra-initialized', 'true');\n      \n      // Parse initial filters from the list element itself\n      const initialFilters = this.parseFiltersFromElement(listElement);\n      const limit = parseInt(this.getAttr(listElement, ATTRS.limit) || '20', 10);\n      \n      // Update state with these initial settings\n      this.state.updateState(listId, { \n      filters: initialFilters,\n        limit: limit,\n        offset: initialFilters.offset || 0,\n      });\n      \n      this.log(`List setup complete for: ${listId}`, { initialFilters, limit });\n      \n      // Load initial data for the list\n      await this.loadExperts(listId, programId);\n\n    } catch (error) {\n      this.log(`Failed to initialize list ${listId}`, error);\n      this.showError(listElement, error as Error);\n    }\n  }\n\n  /**\n   * Wire up all action buttons on the page.\n   */\n  private wireActionButtons(): void {\n    const actionButtons = this.querySelectorAll(document.body, `[${ATTR_PREFIX}${ATTRS.action}]`);\n    \n    actionButtons.forEach(button => {\n      const action = this.getAttr(button, ATTRS.action);\n      const targetListId = this.getAttr(button, ATTRS.listTarget);\n      \n      if (!action || !targetListId) {\n        this.log('Action button is missing required `data-contra-action` or `data-contra-list-target` attributes.', button);\n        return;\n      }\n\n      button.addEventListener('click', (e) => {\n        e.preventDefault();\n        this.handleAction(action, targetListId, button);\n      });\n    });\n  }\n\n  /**\n   * Load experts for a given list.\n   */\n  private async loadExperts(listId: string, programId: string, append = false): Promise<void> {\n    const listElement = this.querySelector(document.body, `[${ATTR_PREFIX}${ATTRS.listId}=\"${listId}\"]`);\n    if (!listElement) {\n      this.log(`Cannot find list element with ID: ${listId}`);\n      return;\n    }\n\n    const state = this.state.getState(listId);\n    const filters = {\n      ...state.filters,\n      limit: state.limit,\n      offset: state.offset,\n    };\n    \n    this.log(`Loading experts for list: ${listId}`, filters);\n\n    try {\n      this.showLoading(listElement, true);\n      this.state.updateState(listId, { loading: true, error: null });\n\n      const response = await this.client.listExperts(programId, filters);\n      \n      this.log(`Loaded ${response.data.length} experts for list ${listId}`, response);\n\n      const newExperts = response.data;\n      const allExperts = append ? [...state.experts, ...newExperts] : newExperts;\n\n      // Update state\n      this.state.updateState(listId, {\n        experts: allExperts,\n        totalCount: response.totalCount,\n        offset: state.offset + newExperts.length,\n        hasNextPage: newExperts.length === state.limit,\n        loading: false\n      });\n\n      // Render experts\n      this.renderExperts(listElement, newExperts, append);\n      \n      // Update UI states\n      this.updateUIStates(listElement, listId);\n\n    } catch (error) {\n      this.log(`Failed to load experts for list: ${listId}`, error);\n      \n      this.state.updateState(listId, { \n        loading: false, \n        error: error as Error \n      });\n      \n      this.showError(listElement, error as Error);\n      \n    } finally {\n      this.showLoading(listElement, false);\n    }\n  }\n\n  /**\n   * Render experts into the container. Can clear or append.\n   */\n  private renderExperts(listElement: Element, experts: ExpertProfile[], append: boolean): void {\n    const template = this.querySelector(listElement, `[${ATTR_PREFIX}${ATTRS.template}]`);\n    if (!template) {\n      this.log('No template found in list', listElement);\n      return;\n    }\n\n    if (!append) {\n      // Clear only previously rendered expert cards\n      const existingCards = this.querySelectorAll(listElement, '.contra-rendered-item');\n    existingCards.forEach(card => card.remove());\n    }\n\n    const fragment = document.createDocumentFragment();\n    experts.forEach(expert => {\n      const expertCard = this.populateExpertCard(template, expert);\n      fragment.appendChild(expertCard);\n    });\n    listElement.appendChild(fragment);\n\n    this.log(`Rendered ${experts.length} expert cards into list`, listElement);\n  }\n\n  /**\n   * Populate expert card from template\n   */\n  private populateExpertCard(template: Element, expert: ExpertProfile): Element {\n    const card = template.cloneNode(true) as Element;\n    \n    // Add a marker class to identify this as a rendered card\n    card.classList.add('contra-rendered-item');\n    \n    // Remove template attribute and show the card\n    card.removeAttribute(`${ATTR_PREFIX}${ATTRS.template}`);\n    (card as HTMLElement).style.display = '';\n\n    // Populate field bindings\n    this.populateFields(card, expert);\n    \n    // Handle repeating elements (projects, social links)\n    this.populateRepeatingElements(card, expert);\n    \n    // Handle conditional display\n    this.handleConditionalDisplay(card, expert);\n\n    return card;\n  }\n\n  /**\n   * Populate data fields in the card\n   */\n  private populateFields(card: Element, expert: ExpertProfile): void {\n    const fieldElements = this.querySelectorAll(card, `[${ATTR_PREFIX}${ATTRS.field}]`);\n    \n    fieldElements.forEach(element => {\n      const fieldName = this.getAttr(element, ATTRS.field) as ExpertField;\n      const format = this.getAttr(element, ATTRS.format);\n      \n      if (!fieldName || !(fieldName in expert)) return;\n\n      const value = expert[fieldName];\n      this.setElementValue(element, value, format);\n    });\n\n    // Handle star ratings\n    const starsElements = this.querySelectorAll(card, '[data-contra-stars]');\n    starsElements.forEach(element => {\n      if (expert.averageReviewScore) {\n        this.renderStarRating(element, expert.averageReviewScore);\n      }\n    });\n  }\n\n  /**\n   * Set element value with proper formatting\n   */\n  private setElementValue(element: Element, value: any, format?: string | null): void {\n    if (value == null || value === '') return;\n\n    // Media type detection and handling\n    if (this.isMediaField(element) && typeof value === 'string' && value.trim()) {\n      this.setMediaValue(element, value);\n      return;\n    }\n\n    if (element instanceof HTMLAnchorElement) {\n      element.href = String(value);\n      if (element.children.length === 0 && !element.textContent?.trim()) {\n        element.textContent = String(value);\n      }\n    } else if (element instanceof HTMLInputElement) {\n      element.value = String(value);\n    } else if (element instanceof HTMLImageElement) {\n      // Regular image handling for avatars and other images\n      element.src = String(value);\n      element.alt = element.alt || 'Image';\n    } else {\n      // Text content with formatting\n      let displayValue = String(value);\n      \n      if (format) {\n        switch (format) {\n          case 'currency':\n            displayValue = typeof value === 'number' ? `$${value}` : displayValue;\n            break;\n          case 'rate':\n            displayValue = utils.formatRate(typeof value === 'number' ? value : null);\n            break;\n          case 'rating':\n            // Format rating to one decimal place (5.0, 4.9, etc.)\n            displayValue = typeof value === 'number' ? value.toFixed(1) : displayValue;\n            break;\n          case 'earnings':\n            // Format earnings like $25k+\n            if (typeof value === 'number') {\n              if (value >= 1000000) {\n                displayValue = `$${Math.floor(value / 1000000)}M+`;\n              } else if (value >= 1000) {\n                displayValue = `$${Math.floor(value / 1000)}k+`;\n              } else {\n                displayValue = `$${value}`;\n              }\n            }\n            break;\n          case 'number':\n            displayValue = typeof value === 'number' ? value.toLocaleString() : displayValue;\n            break;\n          case 'truncate':\n            displayValue = displayValue.length > 100 ? displayValue.substring(0, 97) + '...' : displayValue;\n            break;\n          case 'boolean':\n            displayValue = value ? 'Yes' : 'No';\n            break;\n          case 'availability':\n            displayValue = value ? 'Available' : 'Not Available';\n            break;\n        }\n      }\n      \n      element.textContent = displayValue;\n    }\n  }\n\n  /**\n   * Star rating rendering with optional text display\n   */\n  private renderStarRating(element: Element, rating: number): void {\n    const fullStars = Math.floor(rating);\n    const hasHalfStar = rating % 1 >= 0.5;\n    const emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);\n    \n    let starsHtml = '';\n    \n    // Full stars\n    for (let i = 0; i < fullStars; i++) {\n      starsHtml += '<span class=\"contra-star contra-star-full\">★</span>';\n    }\n    \n    // Half star\n    if (hasHalfStar) {\n      starsHtml += '<span class=\"contra-star contra-star-half\">★</span>';\n    }\n    \n    // Empty stars\n    for (let i = 0; i < emptyStars; i++) {\n      starsHtml += '<span class=\"contra-star contra-star-empty\">☆</span>';\n    }\n    \n    element.innerHTML = starsHtml;\n    \n    // Also update any rating text elements in the same card\n    const card = element.closest('[data-contra-template]') || element.closest('.expert-card');\n    if (card) {\n      const ratingTextElements = this.querySelectorAll(card, '[data-contra-rating-text]');\n      ratingTextElements.forEach(textElement => {\n        textElement.textContent = rating.toFixed(1);\n      });\n    }\n  }\n\n  /**\n   * Media type detection and element handling\n   */\n  private isMediaField(element: Element): boolean {\n    const field = this.getAttr(element, ATTRS.field);\n    // Only apply advanced media handling to project cover URLs, not avatars\n    return field === 'coverUrl';\n  }\n\n  /**\n   * Media value setting with automatic type detection\n   */\n  private setMediaValue(element: Element, url: string): void {\n    const mediaType = this.detectMediaType(url);\n    const parent = element.parentElement;\n    \n    if (!parent) {\n      this.log('Media element has no parent for replacement', element);\n      return;\n    }\n\n    // Remove existing media element\n    element.remove();\n\n    // Create appropriate media element\n    let mediaElement: HTMLElement;\n    \n    switch (mediaType) {\n      case 'video':\n        mediaElement = this.createVideoElement(url, element);\n        break;\n      case 'image':\n      default:\n        mediaElement = this.createImageElement(url, element);\n        break;\n    }\n\n    // Preserve classes and attributes from original element\n    this.transferAttributes(element, mediaElement);\n    \n    // Insert new media element\n    parent.appendChild(mediaElement);\n    \n    this.log(`Created ${mediaType} element for URL: ${url}`);\n  }\n\n  /**\n   * Detect media type from URL\n   */\n  private detectMediaType(url: string): 'image' | 'video' {\n    if (!url || typeof url !== 'string') {\n      this.log('Invalid URL provided to detectMediaType:', url);\n      return 'image';\n    }\n    \n    const urlLower = url.toLowerCase();\n    \n    // Video formats\n    const videoExtensions = ['.mp4', '.webm', '.mov', '.avi', '.mkv', '.ogg'];\n    const isVideo = videoExtensions.some(ext => urlLower.includes(ext));\n    \n    // Special handling for Cloudinary video URLs\n    const isCloudinaryVideo = urlLower.includes('cloudinary.com/') && urlLower.includes('/video/');\n    \n    return (isVideo || isCloudinaryVideo) ? 'video' : 'image';\n  }\n\n  /**\n   * Create video element with fallback\n   */\n  private createVideoElement(url: string, originalElement: Element): HTMLVideoElement {\n    const video = document.createElement('video');\n    \n    // Video attributes\n    video.src = url;\n    video.muted = this.config.videoMuted;\n    video.loop = this.config.videoLoop;\n    video.playsInline = true;\n    video.preload = 'metadata';\n    video.controls = this.config.videoControls;\n    \n    // Maintain aspect ratio and object-fit from original\n    video.style.width = '100%';\n    video.style.height = '100%';\n    video.style.objectFit = 'cover';\n    video.style.borderRadius = 'inherit';\n    \n    // Autoplay configuration\n    if (this.config.videoAutoplay) {\n      video.autoplay = true;\n      video.setAttribute('autoplay', '');\n    }\n    \n    // Error handling with fallback to poster or placeholder\n    video.onerror = () => {\n      this.log(`Video failed to load: ${url}`);\n      // Try to extract a thumbnail from Cloudinary video URL\n      const posterUrl = this.extractVideoThumbnail(url);\n      if (posterUrl) {\n        const fallbackImg = this.createImageElement(posterUrl, originalElement);\n        video.parentElement?.replaceChild(fallbackImg, video);\n      } else {\n        // Show placeholder\n        video.style.background = '#f3f4f6';\n        video.style.position = 'relative';\n        video.innerHTML = '<div style=\"position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);color:#9ca3af;font-size:12px;\">Video unavailable</div>';\n      }\n    };\n\n    // Hover-to-play functionality (if enabled and not autoplay)\n    if (this.config.videoHoverPlay && !this.config.videoAutoplay) {\n      video.addEventListener('mouseenter', () => {\n        video.currentTime = 0;\n        video.play().catch(() => {\n          // Ignore play errors (browser policies)\n        });\n      });\n\n      video.addEventListener('mouseleave', () => {\n        video.pause();\n        video.currentTime = 0;\n      });\n    }\n\n    return video;\n  }\n\n  /**\n   * Create image element with error handling\n   */\n  private createImageElement(url: string, originalElement: Element): HTMLImageElement {\n    const img = document.createElement('img');\n    \n    img.src = url;\n    img.alt = originalElement.getAttribute('alt') || 'Media content';\n    img.loading = 'lazy';\n    \n    // Maintain styling\n    img.style.width = '100%';\n    img.style.height = '100%';\n    img.style.objectFit = 'cover';\n    img.style.borderRadius = 'inherit';\n    \n    // Error handling\n    img.onerror = () => {\n      this.log(`Image failed to load: ${url}`);\n      img.style.background = '#f3f4f6';\n      img.style.opacity = '0.5';\n      img.alt = 'Image unavailable';\n      \n      // Add broken image icon\n      img.style.position = 'relative';\n      const placeholder = document.createElement('div');\n      placeholder.style.cssText = `\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        color: #9ca3af;\n        font-size: 12px;\n        text-align: center;\n      `;\n      placeholder.textContent = '🖼️ Image unavailable';\n      img.parentElement?.appendChild(placeholder);\n    };\n\n    return img;\n  }\n\n  /**\n   * Extract video thumbnail from Cloudinary URL\n   */\n  private extractVideoThumbnail(videoUrl: string): string | null {\n    if (videoUrl.includes('cloudinary.com/') && videoUrl.includes('/video/')) {\n      // Convert video URL to image thumbnail\n      return videoUrl\n        .replace('/video/', '/image/')\n        .replace(/\\.(mp4|webm|mov|avi|mkv)$/i, '.jpg')\n        .replace('fl_progressive', 'f_auto,q_auto,c_fill');\n    }\n    return null;\n  }\n\n  /**\n   * Transfer attributes and classes from old element to new\n   */\n  private transferAttributes(from: Element, to: HTMLElement): void {\n    // Transfer classes\n    if (from.className) {\n      to.className = from.className;\n    }\n    \n    // Transfer data attributes (except contra-field)\n    Array.from(from.attributes).forEach(attr => {\n      if (attr.name.startsWith('data-') && attr.name !== `${ATTR_PREFIX}${ATTRS.field}`) {\n        to.setAttribute(attr.name, attr.value);\n      }\n    });\n    \n    // Transfer style\n    if (from.getAttribute('style')) {\n      const existingStyle = to.getAttribute('style') || '';\n      to.setAttribute('style', existingStyle + '; ' + from.getAttribute('style'));\n    }\n  }\n\n  /**\n   * Handle repeating elements (projects, social links)\n   */\n  private populateRepeatingElements(card: Element, expert: ExpertProfile): void {\n    const repeatElements = this.querySelectorAll(card, `[${ATTR_PREFIX}${ATTRS.repeat}]`);\n    \n    repeatElements.forEach(container => {\n      const repeatType = this.getAttr(container, ATTRS.repeat);\n      const maxItems = parseInt(this.getAttr(container, ATTRS.max) || '10');\n      \n      if (repeatType === 'projects' && expert.projects) {\n        this.populateRepeatingContainer(container, expert.projects.slice(0, maxItems));\n      } else if (repeatType === 'socialLinks' && expert.socialLinks) {\n        this.populateRepeatingContainer(container, expert.socialLinks.slice(0, maxItems));\n      } else if (repeatType === 'skillTags' && expert.skillTags) {\n        this.populateRepeatingContainer(container, expert.skillTags.slice(0, maxItems).map((tag: string) => ({ name: tag })));\n      }\n    });\n  }\n\n  /**\n   * Populate a repeating container with items\n   */\n  private populateRepeatingContainer(container: Element, items: any[]): void {\n    const template = container.firstElementChild;\n    if (!template) return;\n\n    // Clear existing items\n    container.innerHTML = '';\n    \n    // Create items from template\n    items.forEach(item => {\n      const itemElement = template.cloneNode(true) as Element;\n      this.populateFields(itemElement, item);\n      container.appendChild(itemElement);\n    });\n    \n    // Hide container if no items\n    if (items.length === 0) {\n      (container as HTMLElement).style.display = 'none';\n    }\n  }\n\n  /**\n   * Handle conditional display based on data\n   */\n  private handleConditionalDisplay(card: Element, expert: ExpertProfile): void {\n    const conditionalElements = this.querySelectorAll(card, `[${ATTR_PREFIX}${ATTRS.showWhen}], [${ATTR_PREFIX}${ATTRS.hideWhen}]`);\n    \n    conditionalElements.forEach(element => {\n      const showWhen = this.getAttr(element, ATTRS.showWhen);\n      const hideWhen = this.getAttr(element, ATTRS.hideWhen);\n      \n      let shouldShow = true;\n      \n      if (showWhen) {\n        shouldShow = this.evaluateCondition(expert, showWhen);\n      }\n      \n      if (hideWhen) {\n        shouldShow = shouldShow && !this.evaluateCondition(expert, hideWhen);\n      }\n      \n      (element as HTMLElement).style.display = shouldShow ? '' : 'none';\n    });\n  }\n\n  /**\n   * Evaluate a condition against expert data\n   */\n  private evaluateCondition(expert: ExpertProfile, condition: string): boolean {\n    if (!condition || typeof condition !== 'string') {\n      this.log('Invalid condition provided:', condition);\n      return false;\n    }\n    \n    // Parse condition: \"field:value\" or \"field:>value\" etc.\n    const parts = condition.split(':');\n    if (parts.length < 2) {\n      this.log('Invalid condition format:', condition);\n      return false;\n    }\n    \n    const field = parts[0];\n    const restOfCondition = parts.slice(1).join(':'); // Handle colons in values\n    const expertValue = (expert as any)[field];\n    \n    this.log(`Evaluating condition: ${field} (${expertValue}, type: ${typeof expertValue}) against ${restOfCondition}`);\n    \n    if (expertValue == null) {\n      this.log(`Field '${field}' is null/undefined, condition fails`);\n      return false;\n    }\n    \n    // Check for comparison operators\n    if (restOfCondition.startsWith('>=')) {\n      const value = restOfCondition.substring(2);\n      const result = Number(expertValue) >= Number(value);\n      this.log(`Comparison: ${expertValue} >= ${value} = ${result}`);\n      return result;\n    } else if (restOfCondition.startsWith('<=')) {\n      const value = restOfCondition.substring(2);\n      const result = Number(expertValue) <= Number(value);\n      this.log(`Comparison: ${expertValue} <= ${value} = ${result}`);\n      return result;\n    } else if (restOfCondition.startsWith('>')) {\n      const value = restOfCondition.substring(1);\n      const result = Number(expertValue) > Number(value);\n      this.log(`Comparison: ${expertValue} > ${value} = ${result}`);\n      return result;\n    } else if (restOfCondition.startsWith('<')) {\n      const value = restOfCondition.substring(1);\n      const result = Number(expertValue) < Number(value);\n      this.log(`Comparison: ${expertValue} < ${value} = ${result}`);\n      return result;\n    } else {\n      // Direct value comparison with type-aware handling\n      let result = false;\n      \n      // Handle boolean fields specially\n      if (typeof expertValue === 'boolean') {\n        // Convert string condition to boolean for comparison\n        if (restOfCondition.toLowerCase() === 'true') {\n          result = expertValue === true;\n        } else if (restOfCondition.toLowerCase() === 'false') {\n          result = expertValue === false;\n        } else {\n          result = false;\n        }\n        this.log(`Boolean comparison: ${expertValue} === ${restOfCondition.toLowerCase() === 'true'} = ${result}`);\n      } else if (typeof expertValue === 'number') {\n        // Handle numeric comparisons\n        const numValue = Number(restOfCondition);\n        result = !isNaN(numValue) && expertValue === numValue;\n        this.log(`Number comparison: ${expertValue} === ${numValue} = ${result}`);\n      } else {\n        // String comparison (case-insensitive)\n        const expertStr = String(expertValue);\n        const valueStr = String(restOfCondition);\n        result = expertStr.toLowerCase() === valueStr.toLowerCase();\n        this.log(`String comparison: '${expertStr}' === '${valueStr}' = ${result}`);\n      }\n      \n      return result;\n    }\n  }\n\n  /**\n   * Update UI states based on current data for a specific list.\n   */\n  private updateUIStates(listElement: Element, listId: string): void {\n    const state = this.state.getState(listId);\n    \n    // Show/hide empty state\n    const emptyElement = this.querySelector(listElement, `[${ATTR_PREFIX}${ATTRS.empty}]`);\n    if (emptyElement) {\n      (emptyElement as HTMLElement).style.display = state.experts.length === 0 && !state.loading ? '' : 'none';\n    }\n    \n    // Update and control visibility of the load more button\n    const loadMoreButton = this.querySelector(document.body, `[${ATTR_PREFIX}${ATTRS.action}=\"load-more\"][${ATTR_PREFIX}${ATTRS.listTarget}=\"${listId}\"]`);\n    if (loadMoreButton) {\n      const btn = loadMoreButton as HTMLButtonElement;\n      const hasMore = state.hasNextPage;\n\n      btn.style.display = hasMore ? '' : 'none';\n      btn.disabled = state.loading;\n      btn.textContent = state.loading ? 'Loading...' : 'Load More';\n    }\n  }\n\n  /**\n   * Handle action buttons (just load-more for now).\n   */\n  private handleAction(action: string, targetListId: string, button: Element): void {\n    if (action === 'load-more') {\n      const listElement = this.querySelector(document.body, `[${ATTR_PREFIX}${ATTRS.listId}=\"${targetListId}\"]`);\n      const programId = this.getAttr(listElement!, ATTRS.program);\n      if (listElement && programId) {\n        this.loadExperts(targetListId, programId, true); // `true` to append\n      } else {\n        this.log(`Could not find list or program for target: ${targetListId}`);\n  }\n    }\n  }\n\n  private updateFilterAndReload(listId: string, programId: string, filterKey: string, value: any): void {\n    const state = this.state.getState(listId);\n    const newFilters = { ...state.filters };\n\n    // Process and set value\n    let processedValue = value;\n    if (filterKey === 'available') {\n      // If checkbox is checked, value is true. If unchecked, it's false.\n      // We only want to apply the filter when it's true.\n      processedValue = value ? true : undefined;\n    } else if (['minRate', 'maxRate'].includes(filterKey)) {\n      processedValue = (value === '' || value === null) ? undefined : Number(value);\n    } else if (filterKey === 'languages' && typeof value === 'string') {\n        processedValue = value.split(',').map(v => v.trim()).filter(v => v);\n        if (processedValue.length === 0) {\n            processedValue = undefined;\n        }\n    }\n\n    if (processedValue !== undefined && processedValue !== '') {\n        const apiKey = this.filterNameMap[filterKey] || filterKey;\n        (newFilters as any)[apiKey] = processedValue;\n    } else {\n        const apiKey = this.filterNameMap[filterKey] || filterKey;\n        delete (newFilters as any)[apiKey];\n    }\n    \n    // Reset offset and update state\n    this.state.updateState(listId, { filters: newFilters, offset: 0 });\n\n    this.log(`Filter updated for list ${listId}, reloading. New filters:`, newFilters);\n    \n    // Reload the list\n    this.loadExperts(listId, programId, false);\n  }\n\n  private wireFilterControls(): void {\n    const filterControls = this.querySelectorAll(document.body, `[data-contra-filter]`);\n    this.log(`Found ${filterControls.length} filter controls to wire.`);\n\n    filterControls.forEach(control => {\n        const filterKey = control.getAttribute('data-contra-filter');\n        const targetListId = control.getAttribute('data-contra-list-target');\n\n        if (!filterKey || !targetListId) {\n            this.log('Filter control missing required attributes: data-contra-filter or data-contra-list-target', control);\n            return;\n        }\n\n        const listElement = this.querySelector(document.body, `[${ATTR_PREFIX}list-id=\"${targetListId}\"]`);\n        if (!listElement) return;\n        const programId = this.getAttr(listElement, ATTRS.program);\n        if (!programId) return;\n\n        const debounceTime = (control instanceof HTMLInputElement && ['text', 'search'].includes(control.type)) ? 300 : 0;\n        \n        const handler = () => {\n            const value = this.getControlValue(control as HTMLInputElement | HTMLSelectElement);\n            this.updateFilterAndReload(targetListId, programId, filterKey, value);\n        };\n        \n        const debouncedHandler = this.debounce(handler, debounceTime);\n        \n        const eventType = (control instanceof HTMLInputElement && ['text', 'search'].includes(control.type)) ? 'input' : 'change';\n        control.addEventListener(eventType, debouncedHandler);\n    });\n  }\n\n  private debounce(func: (...args: any[]) => void, delay: number): (...args: any[]) => void {\n    let timeoutId: number;\n    return (...args: any[]) => {\n        clearTimeout(timeoutId);\n        if (delay > 0) {\n            timeoutId = window.setTimeout(() => func.apply(this, args), delay);\n        } else {\n            func.apply(this, args);\n  }\n    };\n  }\n\n  /**\n   * Utility Methods\n   */\n  private getAttr(element: Element, name: string): string | null {\n    return element.getAttribute(`${ATTR_PREFIX}${name}`);\n  }\n\n  private querySelector(element: Element, selector: string): Element | null {\n    return element.querySelector(selector);\n  }\n\n  private querySelectorAll(element: Element, selector: string): Element[] {\n    return Array.from(element.querySelectorAll(selector));\n  }\n\n  private parseFiltersFromElement(element: Element): ExpertFilters {\n    const filters: ExpertFilters = {};\n    \n    // Parse filter attributes\n    const filterMap = {\n      'available': 'available',\n      'languages': 'languages', \n      'location': 'location',\n      'min-rate': 'minRate',\n      'max-rate': 'maxRate',\n      'sort': 'sortBy',\n      'limit': 'limit',\n      'offset': 'offset'\n    };\n\n    Object.entries(filterMap).forEach(([attr, filterKey]) => {\n      const value = this.getAttr(element, attr);\n      if (value != null) {\n        if (filterKey === 'available') {\n          (filters as any)[filterKey] = value === 'true';\n        } else if (filterKey === 'languages') {\n          (filters as any)[filterKey] = value.split(',').map(v => v.trim());\n        } else if (['minRate', 'maxRate', 'limit', 'offset'].includes(filterKey)) {\n          (filters as any)[filterKey] = parseInt(value);\n        } else {\n          (filters as any)[filterKey] = value;\n        }\n      }\n    });\n\n    // Ensure offset defaults to 0 if not specified\n    if (filters.offset === undefined) {\n      filters.offset = 0;\n    }\n\n    return filters;\n  }\n\n  private getControlValue(control: HTMLInputElement | HTMLSelectElement): any {\n    if (control instanceof HTMLInputElement) {\n      if (control.type === 'checkbox') {\n        return control.checked;\n      }\n      if (control.type === 'number' || control.type === 'range') {\n        return control.valueAsNumber;\n      }\n      // For text inputs with a datalist, find the corresponding option and use its data attribute if it exists\n      const listId = control.getAttribute('list');\n      if (listId) {\n        const datalist = document.getElementById(listId);\n        if (datalist) {\n          const selectedOption = Array.from(datalist.querySelectorAll('option')).find(\n            opt => opt.value === control.value\n          );\n          if (selectedOption) {\n            return selectedOption.getAttribute('data-api-value') || selectedOption.value;\n          }\n        }\n      }\n      return control.value;\n    } else if (control instanceof HTMLSelectElement) {\n      if (control.multiple) {\n        return Array.from(control.selectedOptions).map(option => option.value);\n      }\n      return control.value;\n    }\n    return null;\n  }\n\n  private showLoading(container: Element, show: boolean): void {\n    const loadingElement = this.querySelector(container, `[${ATTR_PREFIX}${ATTRS.loading}]`);\n    if (loadingElement) {\n      (loadingElement as HTMLElement).style.display = show ? '' : 'none';\n    }\n    \n    (container as HTMLElement).classList.toggle(this.config.loadingClass, show);\n  }\n\n  private showError(container: Element, error: Error): void {\n    const errorElement = this.querySelector(container, `[${ATTR_PREFIX}${ATTRS.error}]`);\n    if (errorElement) {\n      errorElement.textContent = error.message;\n      (errorElement as HTMLElement).style.display = '';\n    }\n    \n    (container as HTMLElement).classList.add(this.config.errorClass);\n    this.log('Error displayed', error);\n  }\n\n  private dispatchEvent(target: Element | Document, eventName: string, detail: any): void {\n    const event = new CustomEvent(`contra:${eventName}`, { detail });\n    target.dispatchEvent(event);\n  }\n\n  private log(message: string, ...args: any[]): void {\n    if (this.config.debug) {\n      console.log(`[ContraWebflow] ${message}`, ...args);\n    }\n  }\n\n  private async getAvailableFilters(programId: string): Promise<any[]> {\n    const url = `https://contra.com/public-api/programs/${programId}/filters`;\n    this.log(`Fetching available filters for program: ${programId}`);\n    try {\n        const response = await fetch(url, {\n            headers: {\n                'X-API-Key': this.config.apiKey,\n                'Accept': 'application/json'\n            }\n        });\n        if (!response.ok) {\n            throw new Error(`Failed to fetch filters: ${response.statusText}`);\n        }\n        const data = await response.json();\n        this.log('Successfully fetched filters', data.data);\n        return data.data || [];\n    } catch (error) {\n        this.log('Error fetching available filters', error);\n        return [];\n    }\n  }\n  \n  private getFilterOptionLabel(filterKey: string, value: string): string {\n    const labels = this.filterOptionLabels[filterKey];\n    if (labels && labels[value]) {\n      return labels[value];\n    }\n    // Capitalize the first letter and lowercase the rest as a fallback\n    return value.charAt(0).toUpperCase() + value.slice(1).toLowerCase();\n  }\n\n  private parseLocationLabel(locationValue: string): string {\n    const labelMatch = locationValue.match(/^(.*?)\\s*\\(/);\n    return labelMatch ? labelMatch[1].trim() : locationValue;\n  }\n\n  private populateAllFilterControls(programFilters: Map<string, any[]>): void {\n    this.log('Populating all filter controls on the page...');\n    const allControls = this.querySelectorAll(document.body, `[data-contra-filter]`);\n\n    allControls.forEach(control => {\n      const targetListId = control.getAttribute('data-contra-list-target');\n      if (!targetListId) return;\n\n      const targetList = this.querySelector(document.body, `[data-contra-list-id=\"${targetListId}\"]`);\n      if (!targetList) return;\n\n      const programId = this.getAttr(targetList, ATTRS.program);\n      if (!programId) return;\n\n      const filters = programFilters.get(programId);\n      if (!filters) return;\n\n      const filterKey = control.getAttribute('data-contra-filter');\n      const filterDef = filters.find(f => f.name === filterKey);\n\n      if (!filterDef) return;\n\n      // Handle number input ranges\n      if (filterDef.type === 'number' && control instanceof HTMLInputElement) {\n        if (filterDef.minimum !== undefined) control.min = String(filterDef.minimum);\n        if (filterDef.maximum !== undefined) control.max = String(filterDef.maximum);\n      }\n\n      // Handle populating select dropdowns and datalists\n      if (filterDef.options) {\n        let targetElement: HTMLElement | null = null;\n        if (control instanceof HTMLSelectElement) {\n            targetElement = control;\n        } else if (control instanceof HTMLInputElement && control.hasAttribute('list')) {\n            targetElement = document.getElementById(control.getAttribute('list')!);\n        }\n        \n        if (targetElement) {\n          this.log(`Populating options for filter '${filterKey}' on element`, targetElement);\n        \n          const placeholder = (targetElement.firstElementChild && targetElement.firstElementChild.getAttribute('value') === \"\") \n            ? targetElement.firstElementChild.cloneNode(true) \n            : null;\n          \n          targetElement.innerHTML = '';\n          if (placeholder) {\n            targetElement.appendChild(placeholder);\n          }\n        \n          filterDef.options.forEach((option: any) => {\n            const optionElement = document.createElement('option');\n            const rawValue = typeof option === 'object' && option.value !== undefined ? option.value : String(option);\n\n            if (filterKey === 'locations') {\n              const label = this.parseLocationLabel(rawValue);\n              optionElement.value = label;\n              optionElement.setAttribute('data-api-value', rawValue);\n            } else {\n              optionElement.value = rawValue;\n              optionElement.textContent = this.getFilterOptionLabel(filterKey!, rawValue);\n            }\n            \n            if (targetElement instanceof HTMLSelectElement) {\n                if (filterKey === 'sortBy' && rawValue === 'relevance') {\n                    optionElement.selected = true;\n                }\n            }\n\n            targetElement.appendChild(optionElement);\n          });\n        }\n      }\n    });\n  }\n}\n\n/**\n * Auto-initialize runtime when DOM is ready\n */\nfunction autoInit(): void {\n  const configElement = document.getElementById('contra-config');\n  if (!configElement) {\n    console.warn('[ContraWebflow] No config element found. Runtime not initialized.');\n    return;\n  }\n\n  try {\n    const config = JSON.parse(configElement.textContent || '{}');\n    \n    // Validate required config\n    if (!config.apiKey) {\n      console.error('[ContraWebflow] API key is required in config.');\n      return;\n    }\n    \n    const initializeRuntime = () => {\n    const runtime = new ContraWebflowRuntime(config);\n    \n    // Expose runtime globally for debugging\n    (window as any).contraRuntime = runtime;\n    \n    runtime.init().catch(error => {\n      console.error('[ContraWebflow] Runtime initialization failed:', error);\n    });\n    };\n    \n    // Use setTimeout to ensure DOM is fully ready\n    setTimeout(initializeRuntime, 100);\n    \n  } catch (error) {\n    console.error('[ContraWebflow] Failed to parse config:', error);\n  }\n}\n\n// Auto-initialize when DOM is ready with multiple fallbacks\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', autoInit);\n} else if (document.readyState === 'interactive') {\n  // DOM is ready but resources might still be loading\n  setTimeout(autoInit, 50);\n} else {\n  // DOM and resources are ready\n  autoInit();\n}\n\n// Export runtime class for manual initialization\nexport { ContraWebflowRuntime as default }; "]}