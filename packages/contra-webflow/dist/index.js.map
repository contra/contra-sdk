{"version":3,"sources":["../src/runtime.ts"],"names":["ATTR_PREFIX","ATTRS","RuntimeState","programId","updates","state","ContraWebflowRuntime","config","ContraClient","containers","container","error","element","initialFilters","debouncedReload","utils","filterControls","control","filterKey","filterType","eventType","button","action","target","e","response","experts","template","card","expert","expertCard","fieldName","format","value","displayValue","rating","fullStars","hasHalfStar","emptyStars","starsHtml","i","textElement","url","mediaType","parent","mediaElement","urlLower","isVideo","ext","isCloudinaryVideo","originalElement","video","posterUrl","fallbackImg","img","placeholder","videoUrl","from","to","attr","existingStyle","repeatType","maxItems","tag","items","item","itemElement","showWhen","hideWhen","shouldShow","condition","parts","field","restOfCondition","expertValue","result","numValue","expertStr","valueStr","emptyElement","currentPage","totalCount","pageSize","totalPages","activeFilters","_key","key","name","selector","filters","v","option","type","newFilters","processedValue","currentArray","event","_target","_button","show","loadingElement","errorElement","eventName","detail","message","args","autoInit","configElement","runtime"],"mappings":"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","file":"index.js","sourcesContent":["import { ContraClient, utils } from '@contra/client';\nimport type {\n  ExpertProfile,\n  ExpertFilters,\n  FilterChangeEvent,\n  ExpertLoadEvent,\n  ErrorEvent,\n  ExpertField\n} from '@contra/types';\n\n/**\n * Webflow Runtime for Contra Experts\n * Features: Performance optimization, filtering, error handling, loading states\n */\n\n// Configuration interface\ninterface RuntimeConfig {\n  apiKey: string;\n  debug?: boolean;\n  loadingClass?: string;\n  errorClass?: string;\n  emptyClass?: string;\n  autoReload?: boolean;\n  debounceDelay?: number;\n  maxRetries?: number;\n  // Video configuration\n  videoAutoplay?: boolean;\n  videoHoverPlay?: boolean;\n  videoMuted?: boolean;\n  videoLoop?: boolean;\n  videoControls?: boolean;\n}\n\n// Attribute constants\nconst ATTR_PREFIX = 'data-contra-';\nconst ATTRS = {\n  // Core attributes\n  program: 'program',\n  template: 'template',\n  loading: 'loading',\n  error: 'error',\n  empty: 'empty',\n  \n  // Field binding\n  field: 'field',\n  format: 'format',\n  \n  // Repeating elements\n  repeat: 'repeat',\n  max: 'max',\n  \n  // Filter controls\n  filter: 'filter',\n  filterType: 'filter-type',\n  \n  // Filter attributes\n  available: 'available',\n  \n  // Sorting and pagination\n  sort: 'sort',\n  page: 'page',\n  limit: 'limit',\n  \n  // UI states\n  showWhen: 'show-when',\n  hideWhen: 'hide-when',\n  \n  // Actions\n  action: 'action',\n  target: 'target'\n} as const;\n\n// State management\nclass RuntimeState {\n  private states = new Map<string, {\n    filters: ExpertFilters;\n    experts: ExpertProfile[];\n    loading: boolean;\n    error: Error | null;\n    currentPage: number;\n    totalCount: number;\n  }>();\n\n  getState(programId: string) {\n    if (!this.states.has(programId)) {\n      this.states.set(programId, {\n        filters: {},\n        experts: [],\n        loading: false,\n        error: null,\n        currentPage: 1,\n        totalCount: 0\n      });\n    }\n    return this.states.get(programId)!;\n  }\n\n  updateState(programId: string, updates: Partial<ReturnType<RuntimeState['getState']>>) {\n    const state = this.getState(programId);\n    Object.assign(state, updates);\n    this.states.set(programId, state);\n  }\n}\n\n/**\n * Main Runtime Class\n */\nexport class ContraWebflowRuntime {\n  private client: ContraClient;\n  private config: Required<RuntimeConfig>;\n  private state = new RuntimeState();\n  private debouncedReload: Map<string, () => void> = new Map();\n\n  constructor(config: RuntimeConfig) {\n    this.config = {\n      debug: false,\n      loadingClass: 'loading',\n      errorClass: 'error',\n      emptyClass: 'empty',\n      autoReload: true,\n      debounceDelay: 300,\n      maxRetries: 3,\n      // Video configuration defaults\n      videoAutoplay: false,      // No autoplay by default (better UX)\n      videoHoverPlay: true,       // Hover to play by default\n      videoMuted: true,           // Muted for autoplay compatibility\n      videoLoop: true,            // Loop videos\n      videoControls: false,       // No controls for cleaner look\n      ...config\n    };\n\n    this.client = new ContraClient({\n      apiKey: this.config.apiKey,\n      debug: this.config.debug\n    });\n\n    this.log('Runtime initialized', this.config);\n  }\n\n  /**\n   * Initialize the runtime and find all expert containers\n   */\n  async init(): Promise<void> {\n    this.log('Initializing runtime...');\n\n    try {\n      // Find all expert containers\n      const containers = this.findExpertContainers();\n      this.log(`Found ${containers.length} expert containers`);\n\n      // Initialize each container\n      for (const container of containers) {\n        await this.initContainer(container);\n      }\n\n      this.log('Runtime initialization complete');\n    } catch (error) {\n      this.log('Runtime initialization failed', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Initialize a single expert container\n   */\n  private async initContainer(container: Element): Promise<void> {\n    const programId = this.getAttr(container, ATTRS.program);\n    if (!programId) {\n      this.log('Container missing program ID', container);\n      return;\n    }\n\n    this.log(`Initializing container for program: ${programId}`);\n\n    try {\n      // Setup container state\n      this.setupContainer(container, programId);\n      \n      // Wire up filter controls\n      this.wireFilterControls(container, programId);\n      \n      // Wire up action buttons\n      this.wireActionButtons(container, programId);\n      \n      // Load initial data\n      await this.loadExperts(container, programId);\n\n    } catch (error) {\n      this.log(`Failed to initialize container for program ${programId}`, error);\n      this.showError(container, error as Error);\n    }\n  }\n\n  /**\n   * Setup container with initial state and classes\n   */\n  private setupContainer(container: Element, programId: string): void {\n    const element = container as HTMLElement;\n    \n    // Add runtime classes\n    element.classList.add('contra-runtime');\n    element.setAttribute('data-program-id', programId);\n    \n    // Parse initial filters from attributes\n    const initialFilters = this.parseFiltersFromElement(container);\n    this.state.updateState(programId, { filters: initialFilters });\n    \n    // Create debounced reload function\n    const debouncedReload = utils.debounce(() => {\n      this.loadExperts(container, programId);\n    }, this.config.debounceDelay);\n    \n    this.debouncedReload.set(programId, debouncedReload);\n    \n    this.log(`Container setup complete for program: ${programId}`, initialFilters);\n  }\n\n  /**\n   * Wire up filter controls to auto-update\n   */\n  private wireFilterControls(container: Element, programId: string): void {\n    const filterControls = this.querySelectorAll(container, `[${ATTR_PREFIX}${ATTRS.filter}]`);\n    \n    this.log(`Found ${filterControls.length} filter controls for program: ${programId}`);\n\n    filterControls.forEach(control => {\n      const filterKey = this.getAttr(control, ATTRS.filter);\n      const filterType = this.getAttr(control, ATTRS.filterType) || 'replace';\n      \n      if (!filterKey) return;\n\n      // Add event listeners based on control type\n      if (control instanceof HTMLInputElement) {\n        const eventType = control.type === 'range' || control.type === 'number' ? 'input' : 'change';\n        \n        control.addEventListener(eventType, () => {\n          this.updateFilter(programId, filterKey, this.getControlValue(control), filterType);\n          if (this.config.autoReload) {\n            this.debouncedReload.get(programId)?.();\n          }\n        });\n        \n      } else if (control instanceof HTMLSelectElement) {\n        control.addEventListener('change', () => {\n          this.updateFilter(programId, filterKey, this.getControlValue(control), filterType);\n          if (this.config.autoReload) {\n            this.debouncedReload.get(programId)?.();\n          }\n        });\n      }\n      \n      this.log(`Wired filter control: ${filterKey} (${filterType})`, control);\n    });\n  }\n\n  /**\n   * Wire up action buttons (pagination, sorting, etc.)\n   */\n  private wireActionButtons(container: Element, programId: string): void {\n    const actionButtons = this.querySelectorAll(container, `[${ATTR_PREFIX}${ATTRS.action}]`);\n    \n    actionButtons.forEach(button => {\n      const action = this.getAttr(button, ATTRS.action);\n      const target = this.getAttr(button, ATTRS.target);\n      \n      if (!action) return;\n\n      button.addEventListener('click', (e) => {\n        e.preventDefault();\n        this.handleAction(programId, action, target, button);\n      });\n    });\n  }\n\n  /**\n   * Load experts for a program\n   */\n  private async loadExperts(container: Element, programId: string): Promise<void> {\n    const state = this.state.getState(programId);\n    \n    this.log(`Loading experts for program: ${programId}`, state.filters);\n\n    try {\n      // Show loading state\n      this.showLoading(container, true);\n      this.state.updateState(programId, { loading: true, error: null });\n\n      // Fetch experts\n      const response = await this.client.listExperts(programId, state.filters);\n      \n      this.log(`Loaded ${response.data.length} experts`, response);\n\n      // Update state\n      this.state.updateState(programId, {\n        experts: response.data,\n        totalCount: response.totalCount,\n        loading: false\n      });\n\n      // Render experts\n      this.renderExperts(container, response.data);\n      \n      // Update UI states\n      this.updateUIStates(container, programId);\n      \n      // Dispatch event\n      this.dispatchEvent(container, 'expertsLoaded', {\n        experts: response.data,\n        totalCount: response.totalCount,\n        filters: state.filters\n      } as ExpertLoadEvent);\n\n    } catch (error) {\n      this.log(`Failed to load experts for program: ${programId}`, error);\n      \n      this.state.updateState(programId, { \n        loading: false, \n        error: error as Error \n      });\n      \n      this.showError(container, error as Error);\n      \n      // Dispatch error event\n      this.dispatchEvent(container, 'expertsError', {\n        error: error as Error,\n        context: `Loading experts for program ${programId}`\n      } as ErrorEvent);\n    } finally {\n      this.showLoading(container, false);\n    }\n  }\n\n  /**\n   * Render experts into the container\n   */\n  private renderExperts(container: Element, experts: ExpertProfile[]): void {\n    const template = this.querySelector(container, `[${ATTR_PREFIX}${ATTRS.template}]`);\n    if (!template) {\n      this.log('No template found in container', container);\n      return;\n    }\n\n    // Clear existing expert cards (keep template)\n    const existingCards = this.querySelectorAll(container, ':scope > *:not([data-contra-template]):not([data-contra-loading]):not([data-contra-error]):not([data-contra-empty])');\n    existingCards.forEach(card => card.remove());\n\n    // Render expert cards\n    experts.forEach(expert => {\n      const expertCard = this.populateExpertCard(template, expert);\n      container.appendChild(expertCard);\n    });\n\n    this.log(`Rendered ${experts.length} expert cards`);\n  }\n\n  /**\n   * Populate expert card from template\n   */\n  private populateExpertCard(template: Element, expert: ExpertProfile): Element {\n    const card = template.cloneNode(true) as Element;\n    \n    // Remove template attribute and show the card\n    card.removeAttribute(`${ATTR_PREFIX}${ATTRS.template}`);\n    (card as HTMLElement).style.display = '';\n\n    // Populate field bindings\n    this.populateFields(card, expert);\n    \n    // Handle repeating elements (projects, social links)\n    this.populateRepeatingElements(card, expert);\n    \n    // Handle conditional display\n    this.handleConditionalDisplay(card, expert);\n\n    return card;\n  }\n\n  /**\n   * Populate data fields in the card\n   */\n  private populateFields(card: Element, expert: ExpertProfile): void {\n    const fieldElements = this.querySelectorAll(card, `[${ATTR_PREFIX}${ATTRS.field}]`);\n    \n    fieldElements.forEach(element => {\n      const fieldName = this.getAttr(element, ATTRS.field) as ExpertField;\n      const format = this.getAttr(element, ATTRS.format);\n      \n      if (!fieldName || !(fieldName in expert)) return;\n\n      const value = expert[fieldName];\n      this.setElementValue(element, value, format);\n    });\n\n    // Handle star ratings\n    const starsElements = this.querySelectorAll(card, '[data-contra-stars]');\n    starsElements.forEach(element => {\n      if (expert.averageReviewScore) {\n        this.renderStarRating(element, expert.averageReviewScore);\n      }\n    });\n  }\n\n  /**\n   * Set element value with proper formatting\n   */\n  private setElementValue(element: Element, value: any, format?: string | null): void {\n    if (value == null || value === '') return;\n\n    // Media type detection and handling\n    if (this.isMediaField(element) && typeof value === 'string' && value.trim()) {\n      this.setMediaValue(element, value);\n      return;\n    }\n\n    if (element instanceof HTMLAnchorElement) {\n      element.href = String(value);\n      if (!element.textContent?.trim()) {\n        element.textContent = String(value);\n      }\n    } else if (element instanceof HTMLInputElement) {\n      element.value = String(value);\n    } else if (element instanceof HTMLImageElement) {\n      // Regular image handling for avatars and other images\n      element.src = String(value);\n      element.alt = element.alt || 'Image';\n    } else {\n      // Text content with formatting\n      let displayValue = String(value);\n      \n      if (format) {\n        switch (format) {\n          case 'currency':\n            displayValue = typeof value === 'number' ? `$${value}` : displayValue;\n            break;\n          case 'rate':\n            displayValue = utils.formatRate(typeof value === 'number' ? value : null);\n            break;\n          case 'rating':\n            // Format rating to one decimal place (5.0, 4.9, etc.)\n            displayValue = typeof value === 'number' ? value.toFixed(1) : displayValue;\n            break;\n          case 'earnings':\n            // Format earnings like $25k+\n            if (typeof value === 'number') {\n              if (value >= 1000000) {\n                displayValue = `$${Math.floor(value / 1000000)}M+`;\n              } else if (value >= 1000) {\n                displayValue = `$${Math.floor(value / 1000)}k+`;\n              } else {\n                displayValue = `$${value}`;\n              }\n            }\n            break;\n          case 'number':\n            displayValue = typeof value === 'number' ? value.toLocaleString() : displayValue;\n            break;\n          case 'truncate':\n            displayValue = displayValue.length > 100 ? displayValue.substring(0, 97) + '...' : displayValue;\n            break;\n          case 'boolean':\n            displayValue = value ? 'Yes' : 'No';\n            break;\n          case 'availability':\n            displayValue = value ? 'Available' : 'Not Available';\n            break;\n        }\n      }\n      \n      element.textContent = displayValue;\n    }\n  }\n\n  /**\n   * Star rating rendering with optional text display\n   */\n  private renderStarRating(element: Element, rating: number): void {\n    const fullStars = Math.floor(rating);\n    const hasHalfStar = rating % 1 >= 0.5;\n    const emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);\n    \n    let starsHtml = '';\n    \n    // Full stars\n    for (let i = 0; i < fullStars; i++) {\n      starsHtml += '<span class=\"contra-star contra-star-full\">★</span>';\n    }\n    \n    // Half star\n    if (hasHalfStar) {\n      starsHtml += '<span class=\"contra-star contra-star-half\">★</span>';\n    }\n    \n    // Empty stars\n    for (let i = 0; i < emptyStars; i++) {\n      starsHtml += '<span class=\"contra-star contra-star-empty\">☆</span>';\n    }\n    \n    element.innerHTML = starsHtml;\n    \n    // Also update any rating text elements in the same card\n    const card = element.closest('[data-contra-template]') || element.closest('.expert-card');\n    if (card) {\n      const ratingTextElements = this.querySelectorAll(card, '[data-contra-rating-text]');\n      ratingTextElements.forEach(textElement => {\n        textElement.textContent = rating.toFixed(1);\n      });\n    }\n  }\n\n  /**\n   * Media type detection and element handling\n   */\n  private isMediaField(element: Element): boolean {\n    const field = this.getAttr(element, ATTRS.field);\n    // Only apply advanced media handling to project cover URLs, not avatars\n    return field === 'coverUrl';\n  }\n\n  /**\n   * Media value setting with automatic type detection\n   */\n  private setMediaValue(element: Element, url: string): void {\n    const mediaType = this.detectMediaType(url);\n    const parent = element.parentElement;\n    \n    if (!parent) {\n      this.log('Media element has no parent for replacement', element);\n      return;\n    }\n\n    // Remove existing media element\n    element.remove();\n\n    // Create appropriate media element\n    let mediaElement: HTMLElement;\n    \n    switch (mediaType) {\n      case 'video':\n        mediaElement = this.createVideoElement(url, element);\n        break;\n      case 'image':\n      default:\n        mediaElement = this.createImageElement(url, element);\n        break;\n    }\n\n    // Preserve classes and attributes from original element\n    this.transferAttributes(element, mediaElement);\n    \n    // Insert new media element\n    parent.appendChild(mediaElement);\n    \n    this.log(`Created ${mediaType} element for URL: ${url}`);\n  }\n\n  /**\n   * Detect media type from URL\n   */\n  private detectMediaType(url: string): 'image' | 'video' {\n    if (!url || typeof url !== 'string') {\n      this.log('Invalid URL provided to detectMediaType:', url);\n      return 'image';\n    }\n    \n    const urlLower = url.toLowerCase();\n    \n    // Video formats\n    const videoExtensions = ['.mp4', '.webm', '.mov', '.avi', '.mkv', '.ogg'];\n    const isVideo = videoExtensions.some(ext => urlLower.includes(ext));\n    \n    // Special handling for Cloudinary video URLs\n    const isCloudinaryVideo = urlLower.includes('cloudinary.com/') && urlLower.includes('/video/');\n    \n    return (isVideo || isCloudinaryVideo) ? 'video' : 'image';\n  }\n\n  /**\n   * Create video element with fallback\n   */\n  private createVideoElement(url: string, originalElement: Element): HTMLVideoElement {\n    const video = document.createElement('video');\n    \n    // Video attributes\n    video.src = url;\n    video.muted = this.config.videoMuted;\n    video.loop = this.config.videoLoop;\n    video.playsInline = true;\n    video.preload = 'metadata';\n    video.controls = this.config.videoControls;\n    \n    // Maintain aspect ratio and object-fit from original\n    video.style.width = '100%';\n    video.style.height = '100%';\n    video.style.objectFit = 'cover';\n    video.style.borderRadius = 'inherit';\n    \n    // Autoplay configuration\n    if (this.config.videoAutoplay) {\n      video.autoplay = true;\n      video.setAttribute('autoplay', '');\n    }\n    \n    // Error handling with fallback to poster or placeholder\n    video.onerror = () => {\n      this.log(`Video failed to load: ${url}`);\n      // Try to extract a thumbnail from Cloudinary video URL\n      const posterUrl = this.extractVideoThumbnail(url);\n      if (posterUrl) {\n        const fallbackImg = this.createImageElement(posterUrl, originalElement);\n        video.parentElement?.replaceChild(fallbackImg, video);\n      } else {\n        // Show placeholder\n        video.style.background = '#f3f4f6';\n        video.style.position = 'relative';\n        video.innerHTML = '<div style=\"position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);color:#9ca3af;font-size:12px;\">Video unavailable</div>';\n      }\n    };\n\n    // Hover-to-play functionality (if enabled and not autoplay)\n    if (this.config.videoHoverPlay && !this.config.videoAutoplay) {\n      video.addEventListener('mouseenter', () => {\n        video.currentTime = 0;\n        video.play().catch(() => {\n          // Ignore play errors (browser policies)\n        });\n      });\n\n      video.addEventListener('mouseleave', () => {\n        video.pause();\n        video.currentTime = 0;\n      });\n    }\n\n    return video;\n  }\n\n  /**\n   * Create image element with error handling\n   */\n  private createImageElement(url: string, originalElement: Element): HTMLImageElement {\n    const img = document.createElement('img');\n    \n    img.src = url;\n    img.alt = originalElement.getAttribute('alt') || 'Media content';\n    img.loading = 'lazy';\n    \n    // Maintain styling\n    img.style.width = '100%';\n    img.style.height = '100%';\n    img.style.objectFit = 'cover';\n    img.style.borderRadius = 'inherit';\n    \n    // Error handling\n    img.onerror = () => {\n      this.log(`Image failed to load: ${url}`);\n      img.style.background = '#f3f4f6';\n      img.style.opacity = '0.5';\n      img.alt = 'Image unavailable';\n      \n      // Add broken image icon\n      img.style.position = 'relative';\n      const placeholder = document.createElement('div');\n      placeholder.style.cssText = `\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        color: #9ca3af;\n        font-size: 12px;\n        text-align: center;\n      `;\n      placeholder.textContent = '🖼️ Image unavailable';\n      img.parentElement?.appendChild(placeholder);\n    };\n\n    return img;\n  }\n\n  /**\n   * Extract video thumbnail from Cloudinary URL\n   */\n  private extractVideoThumbnail(videoUrl: string): string | null {\n    if (videoUrl.includes('cloudinary.com/') && videoUrl.includes('/video/')) {\n      // Convert video URL to image thumbnail\n      return videoUrl\n        .replace('/video/', '/image/')\n        .replace(/\\.(mp4|webm|mov|avi|mkv)$/i, '.jpg')\n        .replace('fl_progressive', 'f_auto,q_auto,c_fill');\n    }\n    return null;\n  }\n\n  /**\n   * Transfer attributes and classes from old element to new\n   */\n  private transferAttributes(from: Element, to: HTMLElement): void {\n    // Transfer classes\n    if (from.className) {\n      to.className = from.className;\n    }\n    \n    // Transfer data attributes (except contra-field)\n    Array.from(from.attributes).forEach(attr => {\n      if (attr.name.startsWith('data-') && attr.name !== `${ATTR_PREFIX}${ATTRS.field}`) {\n        to.setAttribute(attr.name, attr.value);\n      }\n    });\n    \n    // Transfer style\n    if (from.getAttribute('style')) {\n      const existingStyle = to.getAttribute('style') || '';\n      to.setAttribute('style', existingStyle + '; ' + from.getAttribute('style'));\n    }\n  }\n\n  /**\n   * Handle repeating elements (projects, social links)\n   */\n  private populateRepeatingElements(card: Element, expert: ExpertProfile): void {\n    const repeatElements = this.querySelectorAll(card, `[${ATTR_PREFIX}${ATTRS.repeat}]`);\n    \n    repeatElements.forEach(container => {\n      const repeatType = this.getAttr(container, ATTRS.repeat);\n      const maxItems = parseInt(this.getAttr(container, ATTRS.max) || '10');\n      \n      if (repeatType === 'projects' && expert.projects) {\n        this.populateRepeatingContainer(container, expert.projects.slice(0, maxItems));\n      } else if (repeatType === 'socialLinks' && expert.socialLinks) {\n        this.populateRepeatingContainer(container, expert.socialLinks.slice(0, maxItems));\n      } else if (repeatType === 'skillTags' && expert.skillTags) {\n        this.populateRepeatingContainer(container, expert.skillTags.slice(0, maxItems).map((tag: string) => ({ name: tag })));\n      }\n    });\n  }\n\n  /**\n   * Populate a repeating container with items\n   */\n  private populateRepeatingContainer(container: Element, items: any[]): void {\n    const template = container.firstElementChild;\n    if (!template) return;\n\n    // Clear existing items\n    container.innerHTML = '';\n    \n    // Create items from template\n    items.forEach(item => {\n      const itemElement = template.cloneNode(true) as Element;\n      this.populateFields(itemElement, item);\n      container.appendChild(itemElement);\n    });\n    \n    // Hide container if no items\n    if (items.length === 0) {\n      (container as HTMLElement).style.display = 'none';\n    }\n  }\n\n  /**\n   * Handle conditional display based on data\n   */\n  private handleConditionalDisplay(card: Element, expert: ExpertProfile): void {\n    const conditionalElements = this.querySelectorAll(card, `[${ATTR_PREFIX}${ATTRS.showWhen}], [${ATTR_PREFIX}${ATTRS.hideWhen}]`);\n    \n    conditionalElements.forEach(element => {\n      const showWhen = this.getAttr(element, ATTRS.showWhen);\n      const hideWhen = this.getAttr(element, ATTRS.hideWhen);\n      \n      let shouldShow = true;\n      \n      if (showWhen) {\n        shouldShow = this.evaluateCondition(expert, showWhen);\n      }\n      \n      if (hideWhen) {\n        shouldShow = shouldShow && !this.evaluateCondition(expert, hideWhen);\n      }\n      \n      (element as HTMLElement).style.display = shouldShow ? '' : 'none';\n    });\n  }\n\n  /**\n   * Evaluate a condition against expert data\n   */\n  private evaluateCondition(expert: ExpertProfile, condition: string): boolean {\n    if (!condition || typeof condition !== 'string') {\n      this.log('Invalid condition provided:', condition);\n      return false;\n    }\n    \n    // Parse condition: \"field:value\" or \"field:>value\" etc.\n    const parts = condition.split(':');\n    if (parts.length < 2) {\n      this.log('Invalid condition format:', condition);\n      return false;\n    }\n    \n    const field = parts[0];\n    const restOfCondition = parts.slice(1).join(':'); // Handle colons in values\n    const expertValue = (expert as any)[field];\n    \n    this.log(`Evaluating condition: ${field} (${expertValue}, type: ${typeof expertValue}) against ${restOfCondition}`);\n    \n    if (expertValue == null) {\n      this.log(`Field '${field}' is null/undefined, condition fails`);\n      return false;\n    }\n    \n    // Check for comparison operators\n    if (restOfCondition.startsWith('>=')) {\n      const value = restOfCondition.substring(2);\n      const result = Number(expertValue) >= Number(value);\n      this.log(`Comparison: ${expertValue} >= ${value} = ${result}`);\n      return result;\n    } else if (restOfCondition.startsWith('<=')) {\n      const value = restOfCondition.substring(2);\n      const result = Number(expertValue) <= Number(value);\n      this.log(`Comparison: ${expertValue} <= ${value} = ${result}`);\n      return result;\n    } else if (restOfCondition.startsWith('>')) {\n      const value = restOfCondition.substring(1);\n      const result = Number(expertValue) > Number(value);\n      this.log(`Comparison: ${expertValue} > ${value} = ${result}`);\n      return result;\n    } else if (restOfCondition.startsWith('<')) {\n      const value = restOfCondition.substring(1);\n      const result = Number(expertValue) < Number(value);\n      this.log(`Comparison: ${expertValue} < ${value} = ${result}`);\n      return result;\n    } else {\n      // Direct value comparison with type-aware handling\n      let result = false;\n      \n      // Handle boolean fields specially\n      if (typeof expertValue === 'boolean') {\n        // Convert string condition to boolean for comparison\n        if (restOfCondition.toLowerCase() === 'true') {\n          result = expertValue === true;\n        } else if (restOfCondition.toLowerCase() === 'false') {\n          result = expertValue === false;\n        } else {\n          result = false;\n        }\n        this.log(`Boolean comparison: ${expertValue} === ${restOfCondition.toLowerCase() === 'true'} = ${result}`);\n      } else if (typeof expertValue === 'number') {\n        // Handle numeric comparisons\n        const numValue = Number(restOfCondition);\n        result = !isNaN(numValue) && expertValue === numValue;\n        this.log(`Number comparison: ${expertValue} === ${numValue} = ${result}`);\n      } else {\n        // String comparison (case-insensitive)\n        const expertStr = String(expertValue);\n        const valueStr = String(restOfCondition);\n        result = expertStr.toLowerCase() === valueStr.toLowerCase();\n        this.log(`String comparison: '${expertStr}' === '${valueStr}' = ${result}`);\n      }\n      \n      return result;\n    }\n  }\n\n  /**\n   * Update UI states based on current data\n   */\n  private updateUIStates(container: Element, programId: string): void {\n    const state = this.state.getState(programId);\n    \n    // Show/hide empty state\n    const emptyElement = this.querySelector(container, `[${ATTR_PREFIX}${ATTRS.empty}]`);\n    if (emptyElement) {\n      (emptyElement as HTMLElement).style.display = state.experts.length === 0 ? '' : 'none';\n    }\n    \n    // Update pagination info\n    const paginationElements = this.querySelectorAll(container, '[data-contra-pagination-info]');\n    paginationElements.forEach(element => {\n      const { currentPage, totalCount } = state;\n      const pageSize = state.filters.limit || 20;\n      const totalPages = Math.ceil(totalCount / pageSize);\n      \n      element.textContent = `Page ${currentPage} of ${totalPages} (${totalCount} total)`;\n    });\n    \n    // Update filter summaries\n    const filterSummaries = this.querySelectorAll(container, '[data-contra-filter-summary]');\n    filterSummaries.forEach(element => {\n      const activeFilters = Object.entries(state.filters)\n        .filter(([_key, value]) => value != null && value !== '')\n        .map(([key, value]) => `${key}: ${value}`)\n        .join(', ');\n      \n      element.textContent = activeFilters || 'No filters applied';\n    });\n  }\n\n  // ... (utility methods continue below)\n\n  /**\n   * Utility Methods\n   */\n  private getAttr(element: Element, name: string): string | null {\n    return element.getAttribute(`${ATTR_PREFIX}${name}`);\n  }\n\n  private querySelector(element: Element, selector: string): Element | null {\n    return element.querySelector(selector);\n  }\n\n  private querySelectorAll(element: Element, selector: string): Element[] {\n    return Array.from(element.querySelectorAll(selector));\n  }\n\n  private findExpertContainers(): Element[] {\n    return Array.from(document.querySelectorAll(`[${ATTR_PREFIX}${ATTRS.program}]`));\n  }\n\n  private parseFiltersFromElement(element: Element): ExpertFilters {\n    const filters: ExpertFilters = {};\n    \n    // Parse filter attributes\n    const filterMap = {\n      'available': 'available',\n      'languages': 'languages', \n      'location': 'location',\n      'min-rate': 'minRate',\n      'max-rate': 'maxRate',\n      'sort': 'sortBy',\n      'limit': 'limit',\n      'offset': 'offset'\n    };\n\n    Object.entries(filterMap).forEach(([attr, filterKey]) => {\n      const value = this.getAttr(element, attr);\n      if (value != null) {\n        if (filterKey === 'available') {\n          (filters as any)[filterKey] = value === 'true';\n        } else if (filterKey === 'languages') {\n          (filters as any)[filterKey] = value.split(',').map(v => v.trim());\n        } else if (['minRate', 'maxRate', 'limit', 'offset'].includes(filterKey)) {\n          (filters as any)[filterKey] = parseInt(value);\n        } else {\n          (filters as any)[filterKey] = value;\n        }\n      }\n    });\n\n    return filters;\n  }\n\n  private getControlValue(control: HTMLInputElement | HTMLSelectElement): any {\n    if (control instanceof HTMLInputElement) {\n      switch (control.type) {\n        case 'checkbox':\n          return control.checked;\n        case 'number':\n        case 'range':\n          return control.valueAsNumber;\n        default:\n          return control.value;\n      }\n    } else if (control instanceof HTMLSelectElement) {\n      if (control.multiple) {\n        return Array.from(control.selectedOptions).map(option => option.value);\n      }\n      return control.value;\n    }\n    return null;\n  }\n\n  private updateFilter(programId: string, filterKey: string, value: any, type: string = 'replace'): void {\n    const state = this.state.getState(programId);\n    const newFilters = { ...state.filters };\n\n    // Handle special cases for filter value conversion\n    let processedValue = value;\n    \n    if (filterKey === 'available') {\n      // Convert string values to boolean for availability filter\n      if (typeof value === 'string') {\n        if (value === 'true') {\n          processedValue = true;\n        } else if (value === 'false') {\n          processedValue = false;\n        } else if (value === '' || value === null) {\n          processedValue = undefined; // No filter\n        }\n      }\n    } else if (filterKey === 'minRate' || filterKey === 'maxRate') {\n      // Convert empty strings to undefined for rate filters\n      if (value === '' || value === null) {\n        processedValue = undefined;\n      } else {\n        processedValue = Number(value);\n      }\n    }\n\n    if (type === 'append' && Array.isArray(newFilters[filterKey as keyof ExpertFilters])) {\n      const currentArray = newFilters[filterKey as keyof ExpertFilters] as any[];\n      newFilters[filterKey as keyof ExpertFilters] = [...currentArray, processedValue] as any;\n    } else {\n      (newFilters as any)[filterKey] = processedValue;\n    }\n\n    this.state.updateState(programId, { filters: newFilters });\n    \n    this.log(`Filter updated: ${filterKey} = ${processedValue} (original: ${value})`);\n    \n    // Dispatch filter change event\n    const event: FilterChangeEvent = {\n      filters: newFilters,\n      element: document.querySelector(`[data-program-id=\"${programId}\"]`) as HTMLElement\n    };\n    \n    this.dispatchEvent(document as any, 'filterChange', event);\n  }\n\n  private handleAction(programId: string, action: string, _target?: string | null, _button?: Element): void {\n    const state = this.state.getState(programId);\n    \n    switch (action) {\n      case 'next-page':\n        this.updateFilter(programId, 'offset', (state.filters.offset || 0) + (state.filters.limit || 20));\n        break;\n      case 'prev-page':\n        this.updateFilter(programId, 'offset', Math.max(0, (state.filters.offset || 0) - (state.filters.limit || 20)));\n        break;\n      case 'clear-filters':\n        this.state.updateState(programId, { filters: {} });\n        break;\n      case 'reload':\n        this.client.clearCache(`experts:${programId}`);\n        break;\n    }\n    \n    if (this.config.autoReload) {\n      this.debouncedReload.get(programId)?.();\n    }\n  }\n\n  private showLoading(container: Element, show: boolean): void {\n    const loadingElement = this.querySelector(container, `[${ATTR_PREFIX}${ATTRS.loading}]`);\n    if (loadingElement) {\n      (loadingElement as HTMLElement).style.display = show ? '' : 'none';\n    }\n    \n    (container as HTMLElement).classList.toggle(this.config.loadingClass, show);\n  }\n\n  private showError(container: Element, error: Error): void {\n    const errorElement = this.querySelector(container, `[${ATTR_PREFIX}${ATTRS.error}]`);\n    if (errorElement) {\n      errorElement.textContent = error.message;\n      (errorElement as HTMLElement).style.display = '';\n    }\n    \n    (container as HTMLElement).classList.add(this.config.errorClass);\n    this.log('Error displayed', error);\n  }\n\n  private dispatchEvent(target: Element | Document, eventName: string, detail: any): void {\n    const event = new CustomEvent(`contra:${eventName}`, { detail });\n    target.dispatchEvent(event);\n  }\n\n  private log(message: string, ...args: any[]): void {\n    if (this.config.debug) {\n      console.log(`[ContraWebflow] ${message}`, ...args);\n    }\n  }\n}\n\n/**\n * Auto-initialize runtime when DOM is ready\n */\nfunction autoInit(): void {\n  const configElement = document.getElementById('contra-config');\n  if (!configElement) {\n    console.warn('[ContraWebflow] No config element found. Runtime not initialized.');\n    return;\n  }\n\n  try {\n    const config = JSON.parse(configElement.textContent || '{}');\n    const runtime = new ContraWebflowRuntime(config);\n    \n    // Expose runtime globally for debugging\n    (window as any).contraRuntime = runtime;\n    \n    runtime.init().catch(error => {\n      console.error('[ContraWebflow] Runtime initialization failed:', error);\n    });\n    \n  } catch (error) {\n    console.error('[ContraWebflow] Failed to parse config:', error);\n  }\n}\n\n// Auto-initialize when DOM is ready\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', autoInit);\n} else {\n  autoInit();\n}\n\n// Export runtime class for manual initialization\nexport { ContraWebflowRuntime as default }; "]}