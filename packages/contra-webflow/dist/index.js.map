{"version":3,"sources":["../src/runtime.ts"],"names":["ATTR_PREFIX","ATTRS","RuntimeState","programId","updates","state","ContraWebflowRuntime","config","ContraClient","containers","container","error","element","initialFilters","debouncedReload","utils","filterControls","control","filterKey","filterType","eventType","button","action","target","e","response","experts","template","card","expert","expertCard","fieldName","format","value","displayValue","rating","fullStars","hasHalfStar","emptyStars","starsHtml","i","url","mediaType","parent","mediaElement","urlLower","isVideo","ext","isCloudinaryVideo","originalElement","video","posterUrl","fallbackImg","img","placeholder","videoUrl","from","to","attr","existingStyle","repeatType","maxItems","tag","items","item","itemElement","showWhen","hideWhen","shouldShow","condition","field","operator","expertValue","emptyElement","currentPage","totalCount","pageSize","totalPages","activeFilters","_key","key","name","selector","filters","v","option","type","newFilters","currentArray","event","_target","_button","show","loadingElement","errorElement","eventName","detail","message","args","autoInit","configElement","runtime"],"mappings":"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","file":"index.js","sourcesContent":["import { ContraClient, utils } from '@contra/client';\nimport type {\n  ExpertProfile,\n  ExpertFilters,\n  FilterChangeEvent,\n  ExpertLoadEvent,\n  ErrorEvent,\n  ExpertField\n} from '@contra/types';\n\n/**\n * Professional Webflow Runtime for Contra Experts\n * Features: Performance optimization, advanced filtering, error handling, loading states\n */\n\n// Configuration interface\ninterface RuntimeConfig {\n  apiKey: string;\n  debug?: boolean;\n  loadingClass?: string;\n  errorClass?: string;\n  emptyClass?: string;\n  autoReload?: boolean;\n  debounceDelay?: number;\n  maxRetries?: number;\n  // Video configuration\n  videoAutoplay?: boolean;\n  videoHoverPlay?: boolean;\n  videoMuted?: boolean;\n  videoLoop?: boolean;\n  videoControls?: boolean;\n}\n\n// Attribute constants\nconst ATTR_PREFIX = 'data-contra-';\nconst ATTRS = {\n  // Core attributes\n  program: 'program',\n  template: 'template',\n  loading: 'loading',\n  error: 'error',\n  empty: 'empty',\n  \n  // Field binding\n  field: 'field',\n  format: 'format',\n  \n  // Repeating elements\n  repeat: 'repeat',\n  max: 'max',\n  \n  // Filter controls\n  filter: 'filter',\n  filterType: 'filter-type',\n  \n  // Sorting and pagination\n  sort: 'sort',\n  page: 'page',\n  limit: 'limit',\n  \n  // UI states\n  showWhen: 'show-when',\n  hideWhen: 'hide-when',\n  \n  // Actions\n  action: 'action',\n  target: 'target'\n} as const;\n\n// State management\nclass RuntimeState {\n  private states = new Map<string, {\n    filters: ExpertFilters;\n    experts: ExpertProfile[];\n    loading: boolean;\n    error: Error | null;\n    currentPage: number;\n    totalCount: number;\n  }>();\n\n  getState(programId: string) {\n    if (!this.states.has(programId)) {\n      this.states.set(programId, {\n        filters: {},\n        experts: [],\n        loading: false,\n        error: null,\n        currentPage: 1,\n        totalCount: 0\n      });\n    }\n    return this.states.get(programId)!;\n  }\n\n  updateState(programId: string, updates: Partial<ReturnType<RuntimeState['getState']>>) {\n    const state = this.getState(programId);\n    Object.assign(state, updates);\n    this.states.set(programId, state);\n  }\n}\n\n/**\n * Main Runtime Class\n */\nexport class ContraWebflowRuntime {\n  private client: ContraClient;\n  private config: Required<RuntimeConfig>;\n  private state = new RuntimeState();\n  private debouncedReload: Map<string, () => void> = new Map();\n\n  constructor(config: RuntimeConfig) {\n    this.config = {\n      debug: false,\n      loadingClass: 'loading',\n      errorClass: 'error',\n      emptyClass: 'empty',\n      autoReload: true,\n      debounceDelay: 300,\n      maxRetries: 3,\n      // Video configuration - Enterprise defaults\n      videoAutoplay: false,      // No autoplay by default (better UX)\n      videoHoverPlay: true,       // Hover to play by default\n      videoMuted: true,           // Muted for autoplay compatibility\n      videoLoop: true,            // Loop videos\n      videoControls: false,       // No controls for cleaner look\n      ...config\n    };\n\n    this.client = new ContraClient({\n      apiKey: this.config.apiKey,\n      debug: this.config.debug\n    });\n\n    this.log('Runtime initialized', this.config);\n  }\n\n  /**\n   * Initialize the runtime and find all expert containers\n   */\n  async init(): Promise<void> {\n    this.log('Initializing runtime...');\n\n    try {\n      // Find all expert containers\n      const containers = this.findExpertContainers();\n      this.log(`Found ${containers.length} expert containers`);\n\n      // Initialize each container\n      for (const container of containers) {\n        await this.initContainer(container);\n      }\n\n      this.log('Runtime initialization complete');\n    } catch (error) {\n      this.log('Runtime initialization failed', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Initialize a single expert container\n   */\n  private async initContainer(container: Element): Promise<void> {\n    const programId = this.getAttr(container, ATTRS.program);\n    if (!programId) {\n      this.log('Container missing program ID', container);\n      return;\n    }\n\n    this.log(`Initializing container for program: ${programId}`);\n\n    try {\n      // Setup container state\n      this.setupContainer(container, programId);\n      \n      // Wire up filter controls\n      this.wireFilterControls(container, programId);\n      \n      // Wire up action buttons\n      this.wireActionButtons(container, programId);\n      \n      // Load initial data\n      await this.loadExperts(container, programId);\n\n    } catch (error) {\n      this.log(`Failed to initialize container for program ${programId}`, error);\n      this.showError(container, error as Error);\n    }\n  }\n\n  /**\n   * Setup container with initial state and classes\n   */\n  private setupContainer(container: Element, programId: string): void {\n    const element = container as HTMLElement;\n    \n    // Add runtime classes\n    element.classList.add('contra-runtime');\n    element.setAttribute('data-program-id', programId);\n    \n    // Parse initial filters from attributes\n    const initialFilters = this.parseFiltersFromElement(container);\n    this.state.updateState(programId, { filters: initialFilters });\n    \n    // Create debounced reload function\n    const debouncedReload = utils.debounce(() => {\n      this.loadExperts(container, programId);\n    }, this.config.debounceDelay);\n    \n    this.debouncedReload.set(programId, debouncedReload);\n    \n    this.log(`Container setup complete for program: ${programId}`, initialFilters);\n  }\n\n  /**\n   * Wire up filter controls to auto-update\n   */\n  private wireFilterControls(container: Element, programId: string): void {\n    const filterControls = this.querySelectorAll(container, `[${ATTR_PREFIX}${ATTRS.filter}]`);\n    \n    this.log(`Found ${filterControls.length} filter controls for program: ${programId}`);\n\n    filterControls.forEach(control => {\n      const filterKey = this.getAttr(control, ATTRS.filter);\n      const filterType = this.getAttr(control, ATTRS.filterType) || 'replace';\n      \n      if (!filterKey) return;\n\n      // Add event listeners based on control type\n      if (control instanceof HTMLInputElement) {\n        const eventType = control.type === 'range' || control.type === 'number' ? 'input' : 'change';\n        \n        control.addEventListener(eventType, () => {\n          this.updateFilter(programId, filterKey, this.getControlValue(control), filterType);\n          if (this.config.autoReload) {\n            this.debouncedReload.get(programId)?.();\n          }\n        });\n        \n      } else if (control instanceof HTMLSelectElement) {\n        control.addEventListener('change', () => {\n          this.updateFilter(programId, filterKey, this.getControlValue(control), filterType);\n          if (this.config.autoReload) {\n            this.debouncedReload.get(programId)?.();\n          }\n        });\n      }\n      \n      this.log(`Wired filter control: ${filterKey} (${filterType})`, control);\n    });\n  }\n\n  /**\n   * Wire up action buttons (pagination, sorting, etc.)\n   */\n  private wireActionButtons(container: Element, programId: string): void {\n    const actionButtons = this.querySelectorAll(container, `[${ATTR_PREFIX}${ATTRS.action}]`);\n    \n    actionButtons.forEach(button => {\n      const action = this.getAttr(button, ATTRS.action);\n      const target = this.getAttr(button, ATTRS.target);\n      \n      if (!action) return;\n\n      button.addEventListener('click', (e) => {\n        e.preventDefault();\n        this.handleAction(programId, action, target, button);\n      });\n    });\n  }\n\n  /**\n   * Load experts for a program\n   */\n  private async loadExperts(container: Element, programId: string): Promise<void> {\n    const state = this.state.getState(programId);\n    \n    this.log(`Loading experts for program: ${programId}`, state.filters);\n\n    try {\n      // Show loading state\n      this.showLoading(container, true);\n      this.state.updateState(programId, { loading: true, error: null });\n\n      // Fetch experts\n      const response = await this.client.listExperts(programId, state.filters);\n      \n      this.log(`Loaded ${response.data.length} experts`, response);\n\n      // Update state\n      this.state.updateState(programId, {\n        experts: response.data,\n        totalCount: response.totalCount,\n        loading: false\n      });\n\n      // Render experts\n      this.renderExperts(container, response.data);\n      \n      // Update UI states\n      this.updateUIStates(container, programId);\n      \n      // Dispatch event\n      this.dispatchEvent(container, 'expertsLoaded', {\n        experts: response.data,\n        totalCount: response.totalCount,\n        filters: state.filters\n      } as ExpertLoadEvent);\n\n    } catch (error) {\n      this.log(`Failed to load experts for program: ${programId}`, error);\n      \n      this.state.updateState(programId, { \n        loading: false, \n        error: error as Error \n      });\n      \n      this.showError(container, error as Error);\n      \n      // Dispatch error event\n      this.dispatchEvent(container, 'expertsError', {\n        error: error as Error,\n        context: `Loading experts for program ${programId}`\n      } as ErrorEvent);\n    } finally {\n      this.showLoading(container, false);\n    }\n  }\n\n  /**\n   * Render experts into the container\n   */\n  private renderExperts(container: Element, experts: ExpertProfile[]): void {\n    const template = this.querySelector(container, `[${ATTR_PREFIX}${ATTRS.template}]`);\n    if (!template) {\n      this.log('No template found in container', container);\n      return;\n    }\n\n    // Clear existing expert cards (keep template)\n    const existingCards = this.querySelectorAll(container, ':scope > *:not([data-contra-template]):not([data-contra-loading]):not([data-contra-error]):not([data-contra-empty])');\n    existingCards.forEach(card => card.remove());\n\n    // Render expert cards\n    experts.forEach(expert => {\n      const expertCard = this.populateExpertCard(template, expert);\n      container.appendChild(expertCard);\n    });\n\n    this.log(`Rendered ${experts.length} expert cards`);\n  }\n\n  /**\n   * Populate expert card from template\n   */\n  private populateExpertCard(template: Element, expert: ExpertProfile): Element {\n    const card = template.cloneNode(true) as Element;\n    \n    // Remove template attribute and show the card\n    card.removeAttribute(`${ATTR_PREFIX}${ATTRS.template}`);\n    (card as HTMLElement).style.display = '';\n\n    // Populate field bindings\n    this.populateFields(card, expert);\n    \n    // Handle repeating elements (projects, social links)\n    this.populateRepeatingElements(card, expert);\n    \n    // Handle conditional display\n    this.handleConditionalDisplay(card, expert);\n\n    return card;\n  }\n\n  /**\n   * Populate data fields in the card\n   */\n  private populateFields(card: Element, expert: ExpertProfile): void {\n    const fieldElements = this.querySelectorAll(card, `[${ATTR_PREFIX}${ATTRS.field}]`);\n    \n    fieldElements.forEach(element => {\n      const fieldName = this.getAttr(element, ATTRS.field) as ExpertField;\n      const format = this.getAttr(element, ATTRS.format);\n      \n      if (!fieldName || !(fieldName in expert)) return;\n\n      const value = expert[fieldName];\n      this.setElementValue(element, value, format);\n    });\n\n    // Handle star ratings\n    const starsElements = this.querySelectorAll(card, '[data-contra-stars]');\n    starsElements.forEach(element => {\n      if (expert.averageReviewScore) {\n        this.renderStarRating(element, expert.averageReviewScore);\n      }\n    });\n  }\n\n  /**\n   * Set element value with proper formatting\n   */\n  private setElementValue(element: Element, value: any, format?: string | null): void {\n    if (value == null) return;\n\n    // Professional media type detection and handling\n    if (this.isMediaField(element) && typeof value === 'string') {\n      this.setMediaValue(element, value);\n      return;\n    }\n\n    if (element instanceof HTMLAnchorElement) {\n      element.href = String(value);\n      if (!element.textContent?.trim()) {\n        element.textContent = String(value);\n      }\n    } else if (element instanceof HTMLInputElement) {\n      element.value = String(value);\n    } else if (element instanceof HTMLImageElement) {\n      // Regular image handling for avatars and other images\n      element.src = String(value);\n      element.alt = element.alt || 'Image';\n    } else {\n      // Text content with formatting\n      let displayValue = String(value);\n      \n      if (format) {\n        switch (format) {\n          case 'currency':\n            displayValue = typeof value === 'number' ? `$${value}` : displayValue;\n            break;\n          case 'rate':\n            displayValue = utils.formatRate(typeof value === 'number' ? value : null);\n            break;\n          case 'earnings':\n            // Format earnings like $25k+\n            if (typeof value === 'number') {\n              if (value >= 1000000) {\n                displayValue = `$${Math.floor(value / 1000000)}M+`;\n              } else if (value >= 1000) {\n                displayValue = `$${Math.floor(value / 1000)}k+`;\n              } else {\n                displayValue = `$${value}`;\n              }\n            }\n            break;\n          case 'number':\n            displayValue = typeof value === 'number' ? value.toLocaleString() : displayValue;\n            break;\n          case 'truncate':\n            displayValue = displayValue.length > 100 ? displayValue.substring(0, 97) + '...' : displayValue;\n            break;\n          case 'boolean':\n            displayValue = value ? 'Yes' : 'No';\n            break;\n          case 'availability':\n            displayValue = value ? 'Available' : 'Not Available';\n            break;\n        }\n      }\n      \n      element.textContent = displayValue;\n    }\n  }\n\n  /**\n   * Professional star rating rendering\n   */\n  private renderStarRating(element: Element, rating: number): void {\n    const fullStars = Math.floor(rating);\n    const hasHalfStar = rating % 1 >= 0.5;\n    const emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);\n    \n    let starsHtml = '';\n    \n    // Full stars\n    for (let i = 0; i < fullStars; i++) {\n      starsHtml += '<span class=\"contra-star contra-star-full\">★</span>';\n    }\n    \n    // Half star\n    if (hasHalfStar) {\n      starsHtml += '<span class=\"contra-star contra-star-half\">★</span>';\n    }\n    \n    // Empty stars\n    for (let i = 0; i < emptyStars; i++) {\n      starsHtml += '<span class=\"contra-star contra-star-empty\">☆</span>';\n    }\n    \n    element.innerHTML = starsHtml;\n  }\n\n  /**\n   * Enterprise-grade media type detection and element handling\n   */\n  private isMediaField(element: Element): boolean {\n    const field = this.getAttr(element, ATTRS.field);\n    // Only apply advanced media handling to project cover URLs, not avatars\n    return field === 'coverUrl';\n  }\n\n  /**\n   * Professional media value setting with automatic type detection\n   */\n  private setMediaValue(element: Element, url: string): void {\n    const mediaType = this.detectMediaType(url);\n    const parent = element.parentElement;\n    \n    if (!parent) {\n      this.log('Media element has no parent for replacement', element);\n      return;\n    }\n\n    // Remove existing media element\n    element.remove();\n\n    // Create appropriate media element\n    let mediaElement: HTMLElement;\n    \n    switch (mediaType) {\n      case 'video':\n        mediaElement = this.createVideoElement(url, element);\n        break;\n      case 'image':\n      default:\n        mediaElement = this.createImageElement(url, element);\n        break;\n    }\n\n    // Preserve classes and attributes from original element\n    this.transferAttributes(element, mediaElement);\n    \n    // Insert new media element\n    parent.appendChild(mediaElement);\n    \n    this.log(`Created ${mediaType} element for URL: ${url}`);\n  }\n\n  /**\n   * Detect media type from URL\n   */\n  private detectMediaType(url: string): 'image' | 'video' {\n    const urlLower = url.toLowerCase();\n    \n    // Video formats\n    const videoExtensions = ['.mp4', '.webm', '.mov', '.avi', '.mkv', '.ogg'];\n    const isVideo = videoExtensions.some(ext => urlLower.includes(ext));\n    \n    // Special handling for Cloudinary video URLs\n    const isCloudinaryVideo = urlLower.includes('cloudinary.com/') && urlLower.includes('/video/');\n    \n    return (isVideo || isCloudinaryVideo) ? 'video' : 'image';\n  }\n\n  /**\n   * Create professional video element with fallback\n   */\n  private createVideoElement(url: string, originalElement: Element): HTMLVideoElement {\n    const video = document.createElement('video');\n    \n    // Professional video attributes\n    video.src = url;\n    video.muted = this.config.videoMuted;\n    video.loop = this.config.videoLoop;\n    video.playsInline = true;\n    video.preload = 'metadata';\n    video.controls = this.config.videoControls;\n    \n    // Maintain aspect ratio and object-fit from original\n    video.style.width = '100%';\n    video.style.height = '100%';\n    video.style.objectFit = 'cover';\n    video.style.borderRadius = 'inherit';\n    \n    // Autoplay configuration\n    if (this.config.videoAutoplay) {\n      video.autoplay = true;\n      video.setAttribute('autoplay', '');\n    }\n    \n    // Error handling with fallback to poster or placeholder\n    video.onerror = () => {\n      this.log(`Video failed to load: ${url}`);\n      // Try to extract a thumbnail from Cloudinary video URL\n      const posterUrl = this.extractVideoThumbnail(url);\n      if (posterUrl) {\n        const fallbackImg = this.createImageElement(posterUrl, originalElement);\n        video.parentElement?.replaceChild(fallbackImg, video);\n      } else {\n        // Show placeholder\n        video.style.background = '#f3f4f6';\n        video.style.position = 'relative';\n        video.innerHTML = '<div style=\"position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);color:#9ca3af;font-size:12px;\">Video unavailable</div>';\n      }\n    };\n\n    // Hover-to-play functionality (if enabled and not autoplay)\n    if (this.config.videoHoverPlay && !this.config.videoAutoplay) {\n      video.addEventListener('mouseenter', () => {\n        video.currentTime = 0;\n        video.play().catch(() => {\n          // Ignore play errors (browser policies)\n        });\n      });\n\n      video.addEventListener('mouseleave', () => {\n        video.pause();\n        video.currentTime = 0;\n      });\n    }\n\n    return video;\n  }\n\n  /**\n   * Create professional image element with error handling\n   */\n  private createImageElement(url: string, originalElement: Element): HTMLImageElement {\n    const img = document.createElement('img');\n    \n    img.src = url;\n    img.alt = originalElement.getAttribute('alt') || 'Media content';\n    img.loading = 'lazy';\n    \n    // Maintain styling\n    img.style.width = '100%';\n    img.style.height = '100%';\n    img.style.objectFit = 'cover';\n    img.style.borderRadius = 'inherit';\n    \n    // Professional error handling\n    img.onerror = () => {\n      this.log(`Image failed to load: ${url}`);\n      img.style.background = '#f3f4f6';\n      img.style.opacity = '0.5';\n      img.alt = 'Image unavailable';\n      \n      // Add broken image icon\n      img.style.position = 'relative';\n      const placeholder = document.createElement('div');\n      placeholder.style.cssText = `\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        color: #9ca3af;\n        font-size: 12px;\n        text-align: center;\n      `;\n      placeholder.textContent = '🖼️ Image unavailable';\n      img.parentElement?.appendChild(placeholder);\n    };\n\n    return img;\n  }\n\n  /**\n   * Extract video thumbnail from Cloudinary URL\n   */\n  private extractVideoThumbnail(videoUrl: string): string | null {\n    if (videoUrl.includes('cloudinary.com/') && videoUrl.includes('/video/')) {\n      // Convert video URL to image thumbnail\n      return videoUrl\n        .replace('/video/', '/image/')\n        .replace(/\\.(mp4|webm|mov|avi|mkv)$/i, '.jpg')\n        .replace('fl_progressive', 'f_auto,q_auto,c_fill');\n    }\n    return null;\n  }\n\n  /**\n   * Transfer attributes and classes from old element to new\n   */\n  private transferAttributes(from: Element, to: HTMLElement): void {\n    // Transfer classes\n    if (from.className) {\n      to.className = from.className;\n    }\n    \n    // Transfer data attributes (except contra-field)\n    Array.from(from.attributes).forEach(attr => {\n      if (attr.name.startsWith('data-') && attr.name !== `${ATTR_PREFIX}${ATTRS.field}`) {\n        to.setAttribute(attr.name, attr.value);\n      }\n    });\n    \n    // Transfer style\n    if (from.getAttribute('style')) {\n      const existingStyle = to.getAttribute('style') || '';\n      to.setAttribute('style', existingStyle + '; ' + from.getAttribute('style'));\n    }\n  }\n\n  /**\n   * Handle repeating elements (projects, social links)\n   */\n  private populateRepeatingElements(card: Element, expert: ExpertProfile): void {\n    const repeatElements = this.querySelectorAll(card, `[${ATTR_PREFIX}${ATTRS.repeat}]`);\n    \n    repeatElements.forEach(container => {\n      const repeatType = this.getAttr(container, ATTRS.repeat);\n      const maxItems = parseInt(this.getAttr(container, ATTRS.max) || '10');\n      \n      if (repeatType === 'projects' && expert.projects) {\n        this.populateRepeatingContainer(container, expert.projects.slice(0, maxItems));\n      } else if (repeatType === 'socialLinks' && expert.socialLinks) {\n        this.populateRepeatingContainer(container, expert.socialLinks.slice(0, maxItems));\n      } else if (repeatType === 'skillTags' && expert.skillTags) {\n        this.populateRepeatingContainer(container, expert.skillTags.slice(0, maxItems).map((tag: string) => ({ name: tag })));\n      }\n    });\n  }\n\n  /**\n   * Populate a repeating container with items\n   */\n  private populateRepeatingContainer(container: Element, items: any[]): void {\n    const template = container.firstElementChild;\n    if (!template) return;\n\n    // Clear existing items\n    container.innerHTML = '';\n    \n    // Create items from template\n    items.forEach(item => {\n      const itemElement = template.cloneNode(true) as Element;\n      this.populateFields(itemElement, item);\n      container.appendChild(itemElement);\n    });\n    \n    // Hide container if no items\n    if (items.length === 0) {\n      (container as HTMLElement).style.display = 'none';\n    }\n  }\n\n  /**\n   * Handle conditional display based on data\n   */\n  private handleConditionalDisplay(card: Element, expert: ExpertProfile): void {\n    const conditionalElements = this.querySelectorAll(card, `[${ATTR_PREFIX}${ATTRS.showWhen}], [${ATTR_PREFIX}${ATTRS.hideWhen}]`);\n    \n    conditionalElements.forEach(element => {\n      const showWhen = this.getAttr(element, ATTRS.showWhen);\n      const hideWhen = this.getAttr(element, ATTRS.hideWhen);\n      \n      let shouldShow = true;\n      \n      if (showWhen) {\n        shouldShow = this.evaluateCondition(expert, showWhen);\n      }\n      \n      if (hideWhen) {\n        shouldShow = shouldShow && !this.evaluateCondition(expert, hideWhen);\n      }\n      \n      (element as HTMLElement).style.display = shouldShow ? '' : 'none';\n    });\n  }\n\n  /**\n   * Evaluate a condition against expert data\n   */\n  private evaluateCondition(expert: ExpertProfile, condition: string): boolean {\n    // Simple condition evaluation (can be extended)\n    // Format: \"field:value\" or \"field:>value\" or \"field:<value\"\n    const [field, operator, value] = condition.split(':');\n    const expertValue = (expert as any)[field];\n    \n    if (expertValue == null) return false;\n    \n    switch (operator) {\n      case '>':\n        return Number(expertValue) > Number(value);\n      case '<':\n        return Number(expertValue) < Number(value);\n      case '>=':\n        return Number(expertValue) >= Number(value);\n      case '<=':\n        return Number(expertValue) <= Number(value);\n      default:\n        return String(expertValue).toLowerCase() === value.toLowerCase();\n    }\n  }\n\n  /**\n   * Update UI states based on current data\n   */\n  private updateUIStates(container: Element, programId: string): void {\n    const state = this.state.getState(programId);\n    \n    // Show/hide empty state\n    const emptyElement = this.querySelector(container, `[${ATTR_PREFIX}${ATTRS.empty}]`);\n    if (emptyElement) {\n      (emptyElement as HTMLElement).style.display = state.experts.length === 0 ? '' : 'none';\n    }\n    \n    // Update pagination info\n    const paginationElements = this.querySelectorAll(container, '[data-contra-pagination-info]');\n    paginationElements.forEach(element => {\n      const { currentPage, totalCount } = state;\n      const pageSize = state.filters.limit || 20;\n      const totalPages = Math.ceil(totalCount / pageSize);\n      \n      element.textContent = `Page ${currentPage} of ${totalPages} (${totalCount} total)`;\n    });\n    \n    // Update filter summaries\n    const filterSummaries = this.querySelectorAll(container, '[data-contra-filter-summary]');\n    filterSummaries.forEach(element => {\n      const activeFilters = Object.entries(state.filters)\n        .filter(([_key, value]) => value != null && value !== '')\n        .map(([key, value]) => `${key}: ${value}`)\n        .join(', ');\n      \n      element.textContent = activeFilters || 'No filters applied';\n    });\n  }\n\n  // ... (utility methods continue below)\n\n  /**\n   * Utility Methods\n   */\n  private getAttr(element: Element, name: string): string | null {\n    return element.getAttribute(`${ATTR_PREFIX}${name}`);\n  }\n\n  private querySelector(element: Element, selector: string): Element | null {\n    return element.querySelector(selector);\n  }\n\n  private querySelectorAll(element: Element, selector: string): Element[] {\n    return Array.from(element.querySelectorAll(selector));\n  }\n\n  private findExpertContainers(): Element[] {\n    return Array.from(document.querySelectorAll(`[${ATTR_PREFIX}${ATTRS.program}]`));\n  }\n\n  private parseFiltersFromElement(element: Element): ExpertFilters {\n    const filters: ExpertFilters = {};\n    \n    // Parse filter attributes\n    const filterMap = {\n      'available': 'available',\n      'languages': 'languages', \n      'location': 'location',\n      'min-rate': 'minRate',\n      'max-rate': 'maxRate',\n      'sort': 'sortBy',\n      'limit': 'limit',\n      'offset': 'offset'\n    };\n\n    Object.entries(filterMap).forEach(([attr, filterKey]) => {\n      const value = this.getAttr(element, attr);\n      if (value != null) {\n        if (filterKey === 'available') {\n          (filters as any)[filterKey] = value === 'true';\n        } else if (filterKey === 'languages') {\n          (filters as any)[filterKey] = value.split(',').map(v => v.trim());\n        } else if (['minRate', 'maxRate', 'limit', 'offset'].includes(filterKey)) {\n          (filters as any)[filterKey] = parseInt(value);\n        } else {\n          (filters as any)[filterKey] = value;\n        }\n      }\n    });\n\n    return filters;\n  }\n\n  private getControlValue(control: HTMLInputElement | HTMLSelectElement): any {\n    if (control instanceof HTMLInputElement) {\n      switch (control.type) {\n        case 'checkbox':\n          return control.checked;\n        case 'number':\n        case 'range':\n          return control.valueAsNumber;\n        default:\n          return control.value;\n      }\n    } else if (control instanceof HTMLSelectElement) {\n      if (control.multiple) {\n        return Array.from(control.selectedOptions).map(option => option.value);\n      }\n      return control.value;\n    }\n    return null;\n  }\n\n  private updateFilter(programId: string, filterKey: string, value: any, type: string = 'replace'): void {\n    const state = this.state.getState(programId);\n    const newFilters = { ...state.filters };\n\n    if (type === 'append' && Array.isArray(newFilters[filterKey as keyof ExpertFilters])) {\n      const currentArray = newFilters[filterKey as keyof ExpertFilters] as any[];\n      newFilters[filterKey as keyof ExpertFilters] = [...currentArray, value] as any;\n    } else {\n      (newFilters as any)[filterKey] = value;\n    }\n\n    this.state.updateState(programId, { filters: newFilters });\n    \n    // Dispatch filter change event\n    const event: FilterChangeEvent = {\n      filters: newFilters,\n      element: document.querySelector(`[data-program-id=\"${programId}\"]`) as HTMLElement\n    };\n    \n    this.dispatchEvent(document as any, 'filterChange', event);\n  }\n\n  private handleAction(programId: string, action: string, _target?: string | null, _button?: Element): void {\n    const state = this.state.getState(programId);\n    \n    switch (action) {\n      case 'next-page':\n        this.updateFilter(programId, 'offset', (state.filters.offset || 0) + (state.filters.limit || 20));\n        break;\n      case 'prev-page':\n        this.updateFilter(programId, 'offset', Math.max(0, (state.filters.offset || 0) - (state.filters.limit || 20)));\n        break;\n      case 'clear-filters':\n        this.state.updateState(programId, { filters: {} });\n        break;\n      case 'reload':\n        this.client.clearCache(`experts:${programId}`);\n        break;\n    }\n    \n    if (this.config.autoReload) {\n      this.debouncedReload.get(programId)?.();\n    }\n  }\n\n  private showLoading(container: Element, show: boolean): void {\n    const loadingElement = this.querySelector(container, `[${ATTR_PREFIX}${ATTRS.loading}]`);\n    if (loadingElement) {\n      (loadingElement as HTMLElement).style.display = show ? '' : 'none';\n    }\n    \n    (container as HTMLElement).classList.toggle(this.config.loadingClass, show);\n  }\n\n  private showError(container: Element, error: Error): void {\n    const errorElement = this.querySelector(container, `[${ATTR_PREFIX}${ATTRS.error}]`);\n    if (errorElement) {\n      errorElement.textContent = error.message;\n      (errorElement as HTMLElement).style.display = '';\n    }\n    \n    (container as HTMLElement).classList.add(this.config.errorClass);\n    this.log('Error displayed', error);\n  }\n\n  private dispatchEvent(target: Element | Document, eventName: string, detail: any): void {\n    const event = new CustomEvent(`contra:${eventName}`, { detail });\n    target.dispatchEvent(event);\n  }\n\n  private log(message: string, ...args: any[]): void {\n    if (this.config.debug) {\n      console.log(`[ContraWebflow] ${message}`, ...args);\n    }\n  }\n}\n\n/**\n * Auto-initialize runtime when DOM is ready\n */\nfunction autoInit(): void {\n  const configElement = document.getElementById('contra-config');\n  if (!configElement) {\n    console.warn('[ContraWebflow] No config element found. Runtime not initialized.');\n    return;\n  }\n\n  try {\n    const config = JSON.parse(configElement.textContent || '{}');\n    const runtime = new ContraWebflowRuntime(config);\n    \n    // Expose runtime globally for debugging\n    (window as any).contraRuntime = runtime;\n    \n    runtime.init().catch(error => {\n      console.error('[ContraWebflow] Runtime initialization failed:', error);\n    });\n    \n  } catch (error) {\n    console.error('[ContraWebflow] Failed to parse config:', error);\n  }\n}\n\n// Auto-initialize when DOM is ready\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', autoInit);\n} else {\n  autoInit();\n}\n\n// Export runtime class for manual initialization\nexport { ContraWebflowRuntime as default }; "]}