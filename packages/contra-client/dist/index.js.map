{"version":3,"sources":["../src/client.ts"],"names":["_ContraClient","config","endpoint","options","retries","url","controller","timeoutId","requestOptions","response","errorData","delay","resolve","ContraAPIError","data","error","cacheKey","ttl","cached","pendingKey","requestPromise","filters","params","key","value","queryString","programNid","query","experts","searchTerm","expert","tag","pattern","now","entries","ContraClient","message","code","status","utils","rate","rating","fullStars","hasHalfStar","emptyStars","html","i","func","wait","timeout","args","limit","inThrottle"],"mappings":"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","file":"index.js","sourcesContent":["import type {\n  ClientConfig,\n  ExpertProfile,\n  ExpertFilters,\n  ProgramSummary,\n  ListResponse,\n  ApiResponse,\n  ErrorResponse,\n  Filter,\n  FilterListResponse\n} from '@contra/types';\n\n/**\n * Professional Contra API Client\n * Features: Caching, retry logic, error handling, request deduplication\n */\nexport class ContraClient {\n  private config: Required<ClientConfig>;\n  private cache = new Map<string, { data: any; timestamp: number; ttl: number }>();\n  private pendingRequests = new Map<string, Promise<any>>();\n  \n  // Cache TTL settings (in milliseconds)\n  private static readonly CACHE_TTL = {\n    experts: 5 * 60 * 1000,      // 5 minutes for expert lists\n    expert: 10 * 60 * 1000,     // 10 minutes for individual experts\n    program: 30 * 60 * 1000,    // 30 minutes for program info\n    filters: 60 * 60 * 1000,    // 1 hour for available filters\n  };\n\n  constructor(config: ClientConfig) {\n    this.config = {\n      baseUrl: 'https://contra.com',\n      timeout: 10000,\n      debug: false,\n      ...config,\n    };\n\n    if (this.config.debug) {\n      console.log('[ContraClient] Initialized with config:', this.config);\n    }\n  }\n\n  /**\n   * Core fetch method with retry logic and error handling\n   */\n  private async fetch<T>(\n    endpoint: string,\n    options: RequestInit = {},\n    retries = 3\n  ): Promise<T> {\n    const url = `${this.config.baseUrl}${endpoint}`;\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), this.config.timeout);\n\n    const requestOptions: RequestInit = {\n      ...options,\n      signal: controller.signal,\n      headers: {\n        'Accept': 'application/json',\n        'X-API-Key': this.config.apiKey,\n        ...options.headers,\n      },\n    };\n\n    try {\n      if (this.config.debug) {\n        console.log(`[ContraClient] Fetching: ${url}`, requestOptions);\n      }\n\n      const response = await fetch(url, requestOptions);\n      clearTimeout(timeoutId);\n\n      if (!response.ok) {\n        // Try to parse error response\n        let errorData: ErrorResponse;\n        try {\n          errorData = await response.json();\n        } catch {\n          errorData = {\n            code: `HTTP_${response.status}`,\n            message: response.statusText || 'Unknown error'\n          };\n        }\n\n        // Retry on 5xx errors or rate limits\n        if ((response.status >= 500 || response.status === 429) && retries > 0) {\n          const delay = Math.pow(2, 3 - retries) * 1000; // Exponential backoff\n          await new Promise(resolve => setTimeout(resolve, delay));\n          return this.fetch<T>(endpoint, options, retries - 1);\n        }\n\n        throw new ContraAPIError(errorData.message, errorData.code, response.status);\n      }\n\n      const data = await response.json();\n      \n      if (this.config.debug) {\n        console.log(`[ContraClient] Response:`, data);\n      }\n\n      return data;\n\n    } catch (error) {\n      clearTimeout(timeoutId);\n      \n      if (error instanceof ContraAPIError) {\n        throw error;\n      }\n\n      if (error instanceof Error && error.name === 'AbortError') {\n        throw new ContraAPIError(`Request timeout after ${this.config.timeout}ms`, 'TIMEOUT');\n      }\n\n      // Network or other errors - retry if we have retries left\n      if (retries > 0) {\n        const delay = Math.pow(2, 3 - retries) * 1000;\n        await new Promise(resolve => setTimeout(resolve, delay));\n        return this.fetch<T>(endpoint, options, retries - 1);\n      }\n\n      throw new ContraAPIError(\n        error instanceof Error ? error.message : 'Unknown error',\n        'NETWORK_ERROR'\n      );\n    }\n  }\n\n  /**\n   * Get from cache or fetch with request deduplication\n   */\n  private async fetchWithCache<T>(\n    cacheKey: string,\n    endpoint: string,\n    ttl: number,\n    options?: RequestInit\n  ): Promise<T> {\n    // Check cache first\n    const cached = this.cache.get(cacheKey);\n    if (cached && Date.now() - cached.timestamp < cached.ttl) {\n      if (this.config.debug) {\n        console.log(`[ContraClient] Cache hit: ${cacheKey}`);\n      }\n      return cached.data;\n    }\n\n    // Check for pending request (deduplication)\n    const pendingKey = `${endpoint}${JSON.stringify(options)}`;\n    if (this.pendingRequests.has(pendingKey)) {\n      if (this.config.debug) {\n        console.log(`[ContraClient] Request deduplication: ${pendingKey}`);\n      }\n      return this.pendingRequests.get(pendingKey)!;\n    }\n\n    // Make the request\n    const requestPromise = this.fetch<T>(endpoint, options);\n    this.pendingRequests.set(pendingKey, requestPromise);\n\n    try {\n      const data = await requestPromise;\n      \n      // Cache the result\n      this.cache.set(cacheKey, {\n        data,\n        timestamp: Date.now(),\n        ttl\n      });\n\n      return data;\n    } finally {\n      this.pendingRequests.delete(pendingKey);\n    }\n  }\n\n  /**\n   * Build query string from filters\n   */\n  private buildQueryString(filters: ExpertFilters): string {\n    const params = new URLSearchParams();\n    \n    Object.entries(filters).forEach(([key, value]) => {\n      if (value != null && value !== '') {\n        if (Array.isArray(value)) {\n          params.set(key, value.join(','));\n        } else {\n          params.set(key, String(value));\n        }\n      }\n    });\n\n    const queryString = params.toString();\n    return queryString ? `?${queryString}` : '';\n  }\n\n  /**\n   * Get program information\n   */\n  async getProgram(programNid: string): Promise<ProgramSummary> {\n    const cacheKey = `program:${programNid}`;\n    const endpoint = `/public-api/programs/${programNid}`;\n    \n    const response = await this.fetchWithCache<ApiResponse<ProgramSummary>>(\n      cacheKey,\n      endpoint,\n      ContraClient.CACHE_TTL.program\n    );\n    \n    return response.data;\n  }\n\n  /**\n   * List experts with advanced filtering and caching\n   */\n  async listExperts(\n    programNid: string,\n    filters: ExpertFilters = {}\n  ): Promise<ListResponse<ExpertProfile>> {\n    const queryString = this.buildQueryString(filters);\n    const cacheKey = `experts:${programNid}:${JSON.stringify(filters)}`;\n    const endpoint = `/public-api/programs/${programNid}/experts${queryString}`;\n    \n    return this.fetchWithCache<ListResponse<ExpertProfile>>(\n      cacheKey,\n      endpoint,\n      ContraClient.CACHE_TTL.experts\n    );\n  }\n\n  /**\n   * Search experts (using the main experts endpoint with filters)\n   */\n  async searchExperts(\n    programNid: string,\n    query: string,\n    filters: ExpertFilters = {}\n  ): Promise<ListResponse<ExpertProfile>> {\n    // Search is handled by client-side filtering since API doesn't support text search\n    const experts = await this.listExperts(programNid, filters);\n    \n    // Client-side filtering for search (since API doesn't support text search)\n    if (query.trim()) {\n      const searchTerm = query.toLowerCase();\n      experts.data = experts.data.filter(expert => \n        expert.name.toLowerCase().includes(searchTerm) ||\n        expert.oneLiner.toLowerCase().includes(searchTerm) ||\n        expert.skillTags.some(tag => tag.toLowerCase().includes(searchTerm))\n      );\n    }\n    \n    return experts;\n  }\n\n  /**\n   * Get available filter options for a program\n   */\n  async getFilterOptions(programNid: string): Promise<FilterListResponse> {\n    const cacheKey = `filters:${programNid}`;\n    const endpoint = `/public-api/programs/${programNid}/filters`;\n    \n    return this.fetchWithCache<FilterListResponse>(\n      cacheKey,\n      endpoint,\n      ContraClient.CACHE_TTL.filters\n    );\n  }\n\n  /**\n   * Clear cache (useful for forced refreshes)\n   */\n  clearCache(pattern?: string): void {\n    if (pattern) {\n      // Clear specific cache entries\n      for (const key of this.cache.keys()) {\n        if (key.includes(pattern)) {\n          this.cache.delete(key);\n        }\n      }\n    } else {\n      // Clear all cache\n      this.cache.clear();\n    }\n\n    if (this.config.debug) {\n      console.log(`[ContraClient] Cache cleared${pattern ? ` (pattern: ${pattern})` : ''}`);\n    }\n  }\n\n  /**\n   * Get cache statistics\n   */\n  getCacheStats(): {\n    size: number;\n    entries: Array<{ key: string; age: number; ttl: number }>;\n  } {\n    const now = Date.now();\n    const entries = Array.from(this.cache.entries()).map(([key, value]) => ({\n      key,\n      age: now - value.timestamp,\n      ttl: value.ttl\n    }));\n\n    return {\n      size: this.cache.size,\n      entries\n    };\n  }\n}\n\n/**\n * Custom error class for API errors\n */\nexport class ContraAPIError extends Error {\n  constructor(\n    message: string,\n    public code: string,\n    public status?: number\n  ) {\n    super(message);\n    this.name = 'ContraAPIError';\n  }\n}\n\n/**\n * Utility functions\n */\nexport const utils = {\n  /**\n   * Format hourly rate with proper handling of null values\n   */\n  formatRate(rate: number | null): string {\n    return rate ? `$${rate}/hr` : 'Rate on request';\n  },\n\n  /**\n   * Generate star rating HTML\n   */\n  renderStars(rating: number): string {\n    const fullStars = Math.floor(rating);\n    const hasHalfStar = (rating % 1) >= 0.5;\n    const emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);\n    \n    let html = '';\n    \n    // Full stars\n    for (let i = 0; i < fullStars; i++) {\n      html += `<svg class=\"star star-full\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"#FFD700\">\n        <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"/>\n      </svg>`;\n    }\n    \n    // Half star\n    if (hasHalfStar) {\n      html += `<svg class=\"star star-half\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\">\n        <defs>\n          <linearGradient id=\"half-${rating}\">\n            <stop offset=\"50%\" stop-color=\"#FFD700\"/>\n            <stop offset=\"50%\" stop-color=\"#E5E5E5\"/>\n          </linearGradient>\n        </defs>\n        <path fill=\"url(#half-${rating})\" d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"/>\n      </svg>`;\n    }\n    \n    // Empty stars\n    for (let i = 0; i < emptyStars; i++) {\n      html += `<svg class=\"star star-empty\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"#E5E5E5\">\n        <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"/>\n      </svg>`;\n    }\n    \n    return html;\n  },\n\n  /**\n   * Debounce function for search inputs\n   */\n  debounce<T extends (...args: any[]) => any>(\n    func: T,\n    wait: number\n  ): (...args: Parameters<T>) => void {\n    let timeout: NodeJS.Timeout;\n    return (...args: Parameters<T>) => {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => func(...args), wait);\n    };\n  },\n\n  /**\n   * Throttle function for scroll events\n   */\n  throttle<T extends (...args: any[]) => any>(\n    func: T,\n    limit: number\n  ): (...args: Parameters<T>) => void {\n    let inThrottle: boolean;\n    return (...args: Parameters<T>) => {\n      if (!inThrottle) {\n        func(...args);\n        inThrottle = true;\n        setTimeout(() => inThrottle = false, limit);\n      }\n    };\n  }\n}; "]}