{"version":3,"sources":["../src/components.tsx","../src/context.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport type { ContraExpert } from '@contra/contra-core';\nimport { useContra } from './context';\nimport type { ExpertListProps, ExpertCardProps, StarRatingProps } from './types';\n\nexport function StarRating({ score, maxStars = 5, className, style }: StarRatingProps) {\n  const fullStars = Math.floor(score);\n  const hasHalfStar = score % 1 >= 0.5;\n  const emptyStars = maxStars - fullStars - (hasHalfStar ? 1 : 0);\n\n  return (\n    <div className={className} style={style}>\n      {Array.from({ length: fullStars }, (_, i) => (\n        <span key={`full-${i}`} style={{ color: '#FFD700' }}>★</span>\n      ))}\n      {hasHalfStar && <span style={{ color: '#FFD700' }}>☆</span>}\n      {Array.from({ length: emptyStars }, (_, i) => (\n        <span key={`empty-${i}`} style={{ color: '#E5E5E5' }}>☆</span>\n      ))}\n    </div>\n  );\n}\n\nexport function ExpertCard({ expert, className, style, showProjects = true, maxProjects = 4 }: ExpertCardProps) {\n  return (\n    <div className={className} style={style}>\n      <img src={expert.avatarUrl} alt={expert.name} />\n      <h3>{expert.name}</h3>\n      <StarRating score={expert.averageReviewScore} />\n      <p>${expert.hourlyRateUSD}/hr</p>\n      {expert.bio && <p>{expert.bio}</p>}\n      {expert.location && <p>{expert.location}</p>}\n      \n      {showProjects && expert.projects.length > 0 && (\n        <div>\n          <h4>Recent Projects</h4>\n          <div style={{ display: 'flex', gap: '10px', flexWrap: 'wrap' }}>\n            {expert.projects.slice(0, maxProjects).map(project => (\n              <div key={project.id} style={{ width: '60px', height: '60px' }}>\n                <img \n                  src={project.coverUrl} \n                  alt={project.title}\n                  style={{ width: '100%', height: '100%', objectFit: 'cover', borderRadius: '4px' }}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport function ExpertList({ \n  program, \n  filters, \n  className, \n  style, \n  renderExpert,\n  renderEmpty,\n  renderLoading,\n  renderError \n}: ExpertListProps) {\n  const client = useContra();\n  const [experts, setExperts] = useState<ContraExpert[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<Error | null>(null);\n\n  useEffect(() => {\n    let isCancelled = false;\n\n    async function fetchExperts() {\n      try {\n        setLoading(true);\n        setError(null);\n        const response = await client.listExperts(program, filters);\n        \n        if (!isCancelled) {\n          setExperts(response.data);\n        }\n      } catch (err) {\n        if (!isCancelled) {\n          setError(err instanceof Error ? err : new Error('Failed to fetch experts'));\n        }\n      } finally {\n        if (!isCancelled) {\n          setLoading(false);\n        }\n      }\n    }\n\n    fetchExperts();\n\n    return () => {\n      isCancelled = true;\n    };\n  }, [client, program, filters]);\n\n  if (loading) {\n    return renderLoading ? renderLoading() : <div>Loading experts...</div>;\n  }\n\n  if (error) {\n    return renderError ? renderError(error) : <div>Error: {error.message}</div>;\n  }\n\n  if (experts.length === 0) {\n    return renderEmpty ? renderEmpty() : <div>No experts found</div>;\n  }\n\n  return (\n    <div className={className} style={style}>\n      {experts.map(expert => \n        renderExpert ? \n        renderExpert(expert) : \n        <ExpertCard key={expert.id} expert={expert} />\n      )}\n    </div>\n  );\n} ","import { createContext, useContext, useMemo } from 'react';\nimport { ContraClient } from '@contra/contra-core';\nimport type { ContraProviderProps } from './types';\n\nconst ContraContext = createContext<ContraClient | null>(null);\n\nexport function ContraProvider({ apiKey, baseUrl, children }: ContraProviderProps) {\n  const client = useMemo(() => {\n    return new ContraClient({ apiKey, baseUrl });\n  }, [apiKey, baseUrl]);\n\n  return (\n    <ContraContext.Provider value={client}>\n      {children}\n    </ContraContext.Provider>\n  );\n}\n\nexport function useContra(): ContraClient {\n  const client = useContext(ContraContext);\n  if (!client) {\n    throw new Error('useContra must be used within a ContraProvider');\n  }\n  return client;\n} "],"mappings":"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","names":["jsx"]}